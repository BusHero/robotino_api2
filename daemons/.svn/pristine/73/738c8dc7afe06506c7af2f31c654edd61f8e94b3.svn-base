SET(
  NAME
  restapid
)

ADD_DEFINITIONS(-D_TURN_OFF_PLATFORM_STRING)

SET(RESOURCEPATH "${CMAKE_CURRENT_SOURCE_DIR}/robotinoweb")
CONFIGURE_FILE(restapid.conf.in ${CMAKE_CURRENT_BINARY_DIR}/restapid.conf @ONLY )

set (CMAKE_CXX_STANDARD 11)

set(Boost_USE_STATIC_LIBS ON) 
set(Boost_USE_MULTITHREADED ON)  
set(Boost_USE_STATIC_RUNTIME OFF) 

IF(WIN32)
	set (Boost_DETAILED_FAILURE_MSG ON)
	set (Boost_THREADAPI win32)
	set (BOOST_ROOT "F:/boost_1_69_0")
	set (Boost_LIBRARY_DIR  "${BOOST_ROOT}/stage/lib")
	set (Boost_COMPILER "-vc141")
	set (Boost_DEBUG ON )  #<---------- Real life saver
	MESSAGE(STATUS "Searching for 1.69.0")
	find_package(Boost 1.69.0 COMPONENTS system date_time regex thread ) 

	SET(OPENSSL_ROOT_DIR "C:/SDKs/OpenSSL-Win64")
	SET(OPENSSL_MSVC_STATIC_RT ON)

	SET(ZLIB_ROOT "C:/SDKs/zlib-1.2.3")
ELSE()
	find_package(Boost 1.58.0 COMPONENTS system date_time regex thread ) 
ENDIF()

find_package(OpenSSL REQUIRED)

IF( WIN32 )
	STRING( REPLACE "robotino_daemons" "robotino_api2" ROBOTINOAPI2_DIR "${ROBOTINO_DAEMONS_BINARY_DIR}/install" )
ELSE( WIN32 )
		STRING( REPLACE "\\" "/" ROBOTINOAPI2_DIR "/usr/local/robotino/api2" )
ENDIF( WIN32 )

MESSAGE(STATUS "${CMAKE_CURRENT_BINARY_DIR}    ${ROBOTINOAPI2_DIR}")

SET(
	CMAKE_MODULE_PATH
	${ROBOTINOAPI2_DIR}/cmake
)

find_package( RobotinoAPI2 REQUIRED )
COPY_ROBOTINOAPI2_DLLS( "${GLOBAL_TARGET_DIR}/release" "${GLOBAL_TARGET_DIR}/debug" )

INCLUDE_DIRECTORIES(
  ${CMAKE_CURRENT_BINARY_DIR}
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${SHARED_LIB_DIR}/rec/robotino/
  /usr/include
  ${Boost_INCLUDE_DIRS}
  ${OPENSSL_INCLUDE_DIR}
)

FILE( GLOB SRCS *.cpp )
FILE( GLOB HEADER *.h )

MY_WRAP_CPP(
	MOC_SRCS
	${NAME}
	${HEADER}
)

IF( WIN32 )
	SET( SRCS ${SRCS} "${CMAKE_CURRENT_BINARY_DIR}/${NAME}_version.rc" )
ENDIF( WIN32 )

ADD_EXECUTABLE(
  ${NAME}
  ${SRCS}
  ${HEADER}
  ${MOC_SRCS}
  ${MOC_RPC_SRCS}
)

IF(WIN32)
SET_TARGET_PROPERTIES(
  ${NAME}
  PROPERTIES
  COMPILE_FLAGS "/wd4251 /MP"
)
ENDIF( WIN32 )

TARGET_LINK_LIBRARIES(
	${NAME}
	${QT_QTCORE_LIBRARY}
	${QT_QTNETWORK_LIBRARY}
	${QT_HELP_LIBRARIES}
	${REC_ROBOTINO_DAEMONS_LIBRARY}
)

IF(WIN32)
	ADD_SUBDIRECTORY("C:/SDKs/cpprestsdk/Release" cpprestsdk)
ELSE()
	FIND_LIBRARY(
		CPPREST_LIB
		NAMES cpprest
		PATHS /usr/lib/x86_64-linux-gnu
		NO_DEFAULT_PATH
	)
ENDIF()

TARGET_LINK_LIBRARIES(
	${NAME}
	${REC_ROBOTINO_API2_LIBRARY}
)

target_link_libraries(${NAME} ${OPENSSL_LIBRARIES} ${Boost_LIBRARIES} ${CPPREST_LIB})

IF(WIN32)
ELSE()
	target_link_libraries(${NAME} pthread)
ENDIF()

INSTALL(
  TARGETS ${NAME}
  RUNTIME DESTINATION bin
)

INSTALL(
	FILES 
	restapid.conf
	DESTINATION "${INSTALL_DIR}/etc/robotino"
)

GENERATE_VERSION( ${NAME} "${CMAKE_CURRENT_BINARY_DIR}/${NAME}_version.h" "${ROBOTINO_DAEMONS_VERSION}" "Gyrod Daemon" "${NAME}" )
GENERATE_VERSION_RC( ${NAME} "${CMAKE_CURRENT_BINARY_DIR}/${NAME}_version.rc"  "${ROBOTINO_DAEMONS_VERSION}" "Gyrod Daemon" "${NAME}" "${NAME}.exe" 0 )

IF( WIN32 )
	IF( ARCHITECTURE STREQUAL "i386" )
		GENERATE_MANIFEST( ${NAME} "${CMAKE_CURRENT_BINARY_DIR}/manifest.xml" ${ROBOTINO_DAEMONS_VERSION} "${NAME}.exe" "X86" "win32" )
	ELSEIF( ARCHITECTURE STREQUAL "amd64" )
		GENERATE_MANIFEST( ${NAME} "${CMAKE_CURRENT_BINARY_DIR}/manifest.xml" ${ROBOTINO_DAEMONS_VERSION} "${NAME}.exe" "AMD64" "win32" )
	ENDIF( ARCHITECTURE STREQUAL "i386" )
ENDIF( WIN32 )

SOURCE_GROUP( "Source Files" FILES ${SRCS} ${HEADER} )
SOURCE_GROUP( Moc REGULAR_EXPRESSION "(moc_|qrc_)" )