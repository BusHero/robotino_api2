SET(
  NAME
  kinectd
)

# Find packages needed to build library
find_package(libusb-1.0)
find_package(libfreenect)

IF( LIBUSB_1_FOUND AND LIBFREENECT_FOUND )

# libfreenect.h includes libusb.h, so everyone needs this too
INCLUDE_DIRECTORIES(
	${LIBUSB_1_INCLUDE_DIRS}
	${LIBFREENECT_INCLUDE_DIRS}
)

INCLUDE_DIRECTORIES(
  ${CMAKE_CURRENT_BINARY_DIR}
  ${CMAKE_CURRENT_SOURCE_DIR}
)

FILE( GLOB SRCS *.cpp )
FILE( GLOB HEADER *.h )

MY_WRAP_CPP(
	MOC_SRCS
	"${kinectd}"
	${HEADER}
)

SET(
	CONFIG_FILES
	${CMAKE_CURRENT_SOURCE_DIR}/kinectd.conf
	${CMAKE_CURRENT_SOURCE_DIR}/99-kinectd.rules
)

ADD_EXECUTABLE(
  ${NAME}
  ${SRCS}
  ${HEADER}
  ${MOC_SRCS}
)

IF(WIN32)
SET_TARGET_PROPERTIES(
  ${NAME}
  PROPERTIES
  COMPILE_FLAGS "/wd4251 /MP"
)
ENDIF( WIN32 )

TARGET_LINK_LIBRARIES(
	${NAME}
	${QT_QTCORE_LIBRARY}
	${QT_QTNETWORK_LIBRARY}
	${QT_QTXML_LIBRARY}
	${QT_HELP_LIBRARIES}
	${REC_RPC_LIBRARY}
	${REC_ROBOTINO_RPC_LIBRARY}
	${REC_ROBOTINO_DAEMONS_LIBRARY}
	${LIBUSB_1_LIBRARIES}
	${LIBFREENECT_LIBRARIES}
)

INSTALL(
  TARGETS 
  ${NAME}
  DESTINATION bin
)

IF( NOT WIN32 )
INSTALL(
  FILES
  99-kinectd.rules
  DESTINATION "${INSTALL_DIR}/etc/udev/rules.d"
)
INSTALL(
  FILES
  kinectd.conf
  DESTINATION "${INSTALL_DIR}/etc/robotino"
)
INSTALL(
  FILES
  kinectd_wrapper.sh
  PERMISSIONS OWNER_READ GROUP_READ WORLD_READ OWNER_WRITE OWNER_EXECUTE GROUP_EXECUTE WORLD_EXECUTE
  DESTINATION bin
)
ENDIF( NOT WIN32 )

GENERATE_VERSION( ${NAME} "${CMAKE_CURRENT_BINARY_DIR}/kinectd_version.h" ${ROBOTINO_DAEMONS_VERSION} "Kinect Daemon v2" "kinectd" )

SOURCE_GROUP( "Source Files" FILES ${SRCS} ${HEADER} )
SOURCE_GROUP( Moc REGULAR_EXPRESSION "(moc_|qrc_)" )
SOURCE_GROUP( "Config" FILES ${CONFIG_FILES} )

ENDIF( LIBUSB_1_FOUND AND LIBFREENECT_FOUND )
