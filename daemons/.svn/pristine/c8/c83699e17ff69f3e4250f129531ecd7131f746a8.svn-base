SET( LIB_VERSION 1_2_0 )
IF( WIN32 )
	SET( ARCH win )
ELSE( WIN32 )
	SET( ARCH linux )
ENDIF( WIN32 )

IF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
  SET( ARCH ${ARCH}64 )
ELSE( CMAKE_SIZEOF_VOID_P EQUAL 8 )
  SET( ARCH ${ARCH}32 )
ENDIF( CMAKE_SIZEOF_VOID_P EQUAL 8 )

FIND_PATH(
	URGLIB_INCLUDE_DIR 
	NAMES Urg_driver.h
	PATHS urg_library/${LIB_VERSION}/include/cpp
	NO_DEFAULT_PATH
)

#MESSAGE(${URGLIB_INCLUDE_DIR})

IF( WIN32 )
	IF( MSVC12 )
			SET( COMPILER_NAME vc120 )
	ELSE()
			MESSAGE( FATAL_ERROR "urg_library not available for this compiler version" )
	ENDIF()
	
	SET(URGLIB_LIB_PATH "${URGLIB_INCLUDE_DIR}/../../lib/${ARCH}/${COMPILER_NAME}")
ELSE()
	SET(URGLIB_LIB_PATH "${URGLIB_INCLUDE_DIR}/../../lib/${ARCH}")
ENDIF()

FIND_LIBRARY (
	URG_CPP_LIB_R
	NAMES urg_cpp
	PATHS ${URGLIB_LIB_PATH}
	NO_DEFAULT_PATH
)

IF(WIN32)
	FIND_LIBRARY (
		URG_CPP_LIB_D
		NAMES urg_cppd
		PATHS ${URGLIB_LIB_PATH}
		NO_DEFAULT_PATH
	)
	SET( URG_CPP_LIB optimized ${URG_CPP_LIB_R} debug ${URG_CPP_LIB_D} )
ELSE()
	SET( URG_CPP_LIB ${URG_CPP_LIB_R} )
ENDIF()

SET( URG_LIBRARIES ${URG_CPP_LIB} )

SET( URGLIB_FOUND 0 )

IF( URGLIB_INCLUDE_DIR AND URG_CPP_LIB )
  SET( URGLIB_FOUND 1 )
  INCLUDE_DIRECTORIES( ${URGLIB_INCLUDE_DIR} )
ENDIF()


