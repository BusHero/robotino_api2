IF( WIN32 )
	SET( ARCH win )
ELSE( WIN32 )
	SET( ARCH linux )
ENDIF( WIN32 )

IF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
  SET( ARCH ${ARCH}64 )
ELSE( CMAKE_SIZEOF_VOID_P EQUAL 8 )
  SET( ARCH ${ARCH}32 )
ENDIF( CMAKE_SIZEOF_VOID_P EQUAL 8 )

FIND_PATH(
	YAMLCPP_INCLUDE_DIR 
	NAMES yaml-cpp/yaml.h
	PATHS ${EXTERNAL_DIR}/yaml-cpp/include
	NO_DEFAULT_PATH
)

IF( WIN32 )
	IF( MSVC10 )
			SET( COMPILER_NAME vc100 )
	ELSEIF( MSVC12 )
			SET( COMPILER_NAME vc120 )
	ELSE()
			MESSAGE( FATAL_ERROR "yaml-cpp libraries available for this compiler version" )
	ENDIF()

	FIND_LIBRARY (
 		YAMLCPP_REL_LIB
		NAMES yaml-cpp
		PATHS ${EXTERNAL_DIR}/libYAMLCPP/lib/${ARCH}/${COMPILER_NAME}
		NO_DEFAULT_PATH
	)

	FIND_LIBRARY (
 		YAMLCPP_DEBUG_LIB
		NAMES yaml-cppd
		PATHS ${EXTERNAL_DIR}/yaml-cpp/lib/${ARCH}/${COMPILER_NAME}
		NO_DEFAULT_PATH
	)

	SET( YAMLCPP_LIB optimized ${YAMLCPP_REL_LIB} debug ${YAMLCPP_DEBUG_LIB} )
ELSE()
	FIND_LIBRARY (
 		YAMLCPP_LIB
		NAMES yaml-cpp
		PATHS ${EXTERNAL_DIR}/yaml-cpp/lib/${ARCH}
		NO_DEFAULT_PATH
	)
ENDIF()

MESSAGE("YAML-CPP: ${EXTERNAL_DIR}/yaml-cpp/lib/${ARCH}")
MESSAGE("YAMLCPP_INCLUDE_DIR: ${YAMLCPP_INCLUDE_DIR}")
MESSAGE("YAMLCPP_LIB: ${YAMLCPP_LIB}")
SET( YAMLCPP_FOUND 0 )

IF( YAMLCPP_INCLUDE_DIR AND YAMLCPP_LIB )
  SET( YAMLCPP_FOUND 1 )
  INCLUDE_DIRECTORIES( ${YAMLCPP_INCLUDE_DIR} )
ENDIF( YAMLCPP_INCLUDE_DIR AND YAMLCPP_LIB )


