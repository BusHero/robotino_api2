IF( WIN32 )
	SET( ARCH win )
	MESSAGE(FATAL_ERROR "rplidar_sdk: Windows not supported yet")
ELSE( WIN32 )
	SET( ARCH linux )
ENDIF( WIN32 )

SET( LIB_VERSION 1_5_7 )

IF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
  SET( ARCH ${ARCH}64 )
ELSE( CMAKE_SIZEOF_VOID_P EQUAL 8 )
  SET( ARCH ${ARCH}32 )
ENDIF( CMAKE_SIZEOF_VOID_P EQUAL 8 )

FIND_PATH(
	RPLIDAR_SDK_INCLUDE_DIR 
	NAMES rplidar.h
	PATHS ${EXTERNAL_DIR}/rplidar_sdk/${LIB_VERSION}/include
	NO_DEFAULT_PATH
)

IF( WIN32 )
	IF( MSVC10 )
			SET( COMPILER_NAME vc100 )
	ELSEIF( MSVC12 )
			SET( COMPILER_NAME vc120 )
	ELSE()
			MESSAGE( FATAL_ERROR "RPLIDAR_SDK libraries available for this compiler version" )
	ENDIF()

	FIND_LIBRARY (
 		RPLIDAR_SDK_REL_LIB
		NAMES RPLIDAR_SDK
		PATHS ${EXTERNAL_DIR}/libRPLIDAR_SDK/${LIB_VERSION}/lib/${ARCH}/${COMPILER_NAME}
		NO_DEFAULT_PATH
	)

	FIND_LIBRARY (
 		RPLIDAR_SDK_DEBUG_LIB
		NAMES RPLIDAR_SDK_d
		PATHS ${EXTERNAL_DIR}/libRPLIDAR_SDK/${LIB_VERSION}/lib/${ARCH}/${COMPILER_NAME}
		NO_DEFAULT_PATH
	)

	SET( RPLIDAR_SDK_LIB optimized ${RPLIDAR_SDK_REL_LIB} debug ${RPLIDAR_SDK_DEBUG_LIB} )
ELSE()
	FIND_LIBRARY (
 		RPLIDAR_SDK_LIB
		NAMES rplidar_sdk
		PATHS ${EXTERNAL_DIR}/rplidar_sdk/${LIB_VERSION}/lib/${ARCH}
		NO_DEFAULT_PATH
	)
ENDIF()

SET( RPLIDAR_SDK_FOUND 0 )

IF( RPLIDAR_SDK_INCLUDE_DIR AND RPLIDAR_SDK_LIB )
  SET( RPLIDAR_SDK_FOUND 1 )
  INCLUDE_DIRECTORIES( ${RPLIDAR_SDK_INCLUDE_DIR} )
ENDIF( RPLIDAR_SDK_INCLUDE_DIR AND RPLIDAR_SDK_LIB )


