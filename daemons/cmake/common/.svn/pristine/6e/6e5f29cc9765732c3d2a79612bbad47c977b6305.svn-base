IF( UNIX AND NOT APPLE )
	IF( NOT PACKAGE_NAME )
	  MESSAGE( FATAL_ERROR "PACKAGE_NAME not set" )
	ENDIF()

	IF( NOT PACKAGE_VERSION )
	  MESSAGE( FATAL_ERROR "PACKAGE_VERSION not set" )
	ENDIF()

	FILE( WRITE ${CMAKE_CURRENT_BINARY_DIR}/CreateInstaller.cmake
		"EXECUTE_PROCESS(
			COMMAND \"${CMAKE_CURRENT_BINARY_DIR}/create_packages.sh\"
		)
	")

	ADD_CUSTOM_TARGET(
		CREATE_INSTALLER
		COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/CreateInstaller.cmake
		COMMENT "create installer"
	)

	INCLUDE( Codename )

	FILE( WRITE ${CMAKE_CURRENT_BINARY_DIR}/PublishInstaller.cmake 
		"
		FILE( GLOB INSTALLER_NAME RELATIVE \"\${CMAKE_CURRENT_BINARY_DIR}\" \"\${CMAKE_CURRENT_BINARY_DIR}/${PACKAGE_NAME}_${PACKAGE_VERSION}_*.deb\" )
		
		EXECUTE_PROCESS( 
			COMMAND rsync -hv \${INSTALLER_NAME} root@svn.rec.de:/tmp
			TIMEOUT 10000
		)
		
		EXECUTE_PROCESS( 
			COMMAND ssh root@svn.rec.de \"./includedeb.sh ${CODENAME} /tmp/\${INSTALLER_NAME}\"
			TIMEOUT 10000
		)
		")

	ADD_CUSTOM_TARGET(
		PUBLISH_INSTALLER
		COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/PublishInstaller.cmake
		COMMENT "publishing"
	)

ELSEIF( APPLE )
	FILE( WRITE ${CMAKE_CURRENT_BINARY_DIR}/CreateInstaller.cmake
		"EXECUTE_PROCESS(
			COMMAND \"${CMAKE_CURRENT_BINARY_DIR}/create_packages.sh\"
		)
	")

	ADD_CUSTOM_TARGET(
		CREATE_INSTALLER
		COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/CreateInstaller.cmake
		COMMENT "create installer"
	)
ELSEIF( WIN32 )
	find_package( Innosetup )
	IF( INNOSETUP_FOUND )
		STRING( REPLACE "/" "\\" INSTALL_DIR "${CMAKE_INSTALL_PREFIX}" )
		STRING( REPLACE "/" "\\" SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}" )

		find_package(VCRedist REQUIRED)
		
		IF( NOT ARCHITECTURE )
			MESSAGE( FATAL_ERROR "ARCHITECTURE not set" )
		ENDIF()
		
		IF( "${ARCHITECTURE}" STREQUAL "i386" )
			SET( BITNES 32 )
			SET( COMMENT3264 ";" )
			INSTALL(
				FILES
				"${VCREDIST}"
				DESTINATION trash
			)
			get_filename_component(VCREDISTFILENAME "${VCREDIST}" NAME)
		ELSE( "${ARCHITECTURE}" STREQUAL "i386" )
			SET( BITNES 64 )
			INSTALL(
				FILES
				"${VCREDIST_X64}"
				DESTINATION trash
			)
			get_filename_component(VCREDISTFILENAME "${VCREDIST_X64}" NAME)
		ENDIF( "${ARCHITECTURE}" STREQUAL "i386" )
		CONFIGURE_FILE( ${PACKAGE_NAME}.iss.in ${CMAKE_CURRENT_BINARY_DIR}/${PACKAGE_NAME}.iss @ONLY )

	  FILE( WRITE ${CMAKE_CURRENT_BINARY_DIR}/CreateInstaller.cmake 
			"EXECUTE_PROCESS(
				COMMAND \"${INNOSETUP_COMPILER}\" \"/cc\" \"${CMAKE_CURRENT_BINARY_DIR}/${PACKAGE_NAME}.iss\"
			)
		")
		
		STRING( REPLACE "/" "\\" INSTALLER_OUTPUT_DIR "${CMAKE_CURRENT_BINARY_DIR}/Output" )

		ADD_CUSTOM_TARGET(
			CREATE_INSTALLER
			COMMAND del /F /Q "${INSTALLER_OUTPUT_DIR}"
			COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/CreateInstaller.cmake
			COMMENT "create installer"
		)
	ENDIF( INNOSETUP_FOUND )
ENDIF()