#Copyright (c) 2011, REC Robotics Equipment Corporation GmbH, Planegg, Germany
#All rights reserved.

#Redistribution and use in source and binary forms, with or without modification,
#are permitted provided that the following conditions are met:

#- Redistributions of source code must retain the above copyright notice,
#  this list of conditions and the following disclaimer.
#- Redistributions in binary form must reproduce the above copyright notice,
#  this list of conditions and the following disclaimer in the documentation and/or
#  other materials provided with the distribution.
#- Neither the name of the REC Robotics Equipment Corporation GmbH nor the names of
#  its contributors may be used to endorse or promote products derived from this software
#  without specific prior written permission.

#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
#OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
#AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
#CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
#IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

IF( WIN32 )
	FIND_FILE(
		POWERSHELL
		NAMES powershell.exe
	)
ENDIF( WIN32 )

MACRO( GENERATE_VERSION NAME TARGET_FILEPATH VERSION APPNAME EXENAME )

STRING( LENGTH "${VERSION}" VERSION_LENGTH )

IF( VERSION_LENGTH LESS 1 )
	SET( VERSION_SPLIT_LENGTH 0 )
ELSE( VERSION_LENGTH LESS 1 )
	STRING( REGEX MATCHALL [0-9]+ VERSION_SPLIT ${VERSION} )
	LIST( LENGTH VERSION_SPLIT VERSION_SPLIT_LENGTH )
ENDIF( VERSION_LENGTH LESS 1 )

IF( VERSION_SPLIT_LENGTH LESS 3 )
	SET( MAJOR_VER 0 )
	SET( MINOR_VER 0 )
	SET( PATCH_VER 0 )
ELSE( VERSION_SPLIT_LENGTH LESS 3 )
	LIST( GET VERSION_SPLIT 0 MAJOR_VER )
	LIST( GET VERSION_SPLIT 1 MINOR_VER )
	LIST( GET VERSION_SPLIT 2 PATCH_VER )
	STRING( REGEX MATCH [a-z,A-Z]+.* VER_SUFFIX ${VERSION} )
ENDIF( VERSION_SPLIT_LENGTH LESS 3 )

GET_FILENAME_COMPONENT( TARGET_DIRECTORY "${TARGET_FILEPATH}" PATH )

IF( WIN32 )
	IF( POWERSHELL )
		FILE( WRITE ${TARGET_DIRECTORY}/GenerateVersionHeader.cmake
"EXECUTE_PROCESS( COMMAND \"powershell\" \"-noprofile\" \"-C\" \"get-date -f yyyyMMdd\" TIMEOUT 30 OUTPUT_VARIABLE BUILDDATE )
")
	ELSE( POWERSHELL )
		FILE( WRITE ${TARGET_DIRECTORY}/GenerateDateString.js
"var d = new Date();
var mm = d.getMonth() + 1;
var dd = d.getDate();
var s = new String;
s += d.getFullYear();
if ( mm < 10 ) { s += \"0\"; }
s += mm;
if ( dd < 10 ) { s += \"0\"; }
s += dd;
WScript.echo( s );
")
		FILE( WRITE ${TARGET_DIRECTORY}/GenerateVersionHeader.cmake
"EXECUTE_PROCESS( COMMAND \"cscript\" \"/nologo\" \"rec/rpc/GenerateDateString.js\" TIMEOUT 5 OUTPUT_VARIABLE BUILDDATE )
")
	ENDIF( POWERSHELL )
ELSE( WIN32 )
	FILE( WRITE ${TARGET_DIRECTORY}/GenerateVersionHeader.cmake
"EXECUTE_PROCESS( COMMAND \"date\" \"+%Y%m%d\" TIMEOUT 2 OUTPUT_VARIABLE BUILDDATE )
")
ENDIF( WIN32 )

STRING( REPLACE " " "-" MyAppId "${APPNAME}" )

FILE( APPEND ${TARGET_DIRECTORY}/GenerateVersionHeader.cmake
"STRING( SUBSTRING \${BUILDDATE} 0 8 BUILDDATE )
FILE( WRITE \"${TARGET_FILEPATH}.tmp\"
\"#define MajorVer ${MAJOR_VER}
#define MinorVer ${MINOR_VER}
#define PatchVer ${PATCH_VER}
#define Suffix \\\"${VER_SUFFIX}\\\"
#define BuildVer \${BUILDDATE}
#define BuildVerStr \\\"\${BUILDDATE}\\\"
#define VersionString \\\"${MAJOR_VER}.${MINOR_VER}.${PATCH_VER}${VER_SUFFIX} Build \${BUILDDATE}\\\"
#define MyAppName \\\"${APPNAME}\\\"
#define MyAppId \\\"${MyAppId}\\\"
#define MyAppExeName \\\"${EXENAME}\\\"
#define MyCompany      \\\"REC GmbH\\\"
#define MyPublisherURL \\\"www.servicerobotics.eu\\\"
#define MySupportURL   \\\"www.servicerobotics.eu\\\"
#define MyUpdatesURL   \\\"www.servicerobotics.eu\\\"
\" )

IF( EXISTS \"${TARGET_FILEPATH}\" )
	FILE( READ \"${TARGET_FILEPATH}\" CURRENT_VERSION_FILE )
	FILE( READ \"${TARGET_FILEPATH}.tmp\" TEMP_VERSION_FILE )
	IF( \${CURRENT_VERSION_FILE} STREQUAL \${TEMP_VERSION_FILE} )
	ELSE( \${CURRENT_VERSION_FILE} STREQUAL \${TEMP_VERSION_FILE} )
		CONFIGURE_FILE( \"${TARGET_FILEPATH}.tmp\" \"${TARGET_FILEPATH}\" COPYONLY )
	ENDIF( \${CURRENT_VERSION_FILE} STREQUAL \${TEMP_VERSION_FILE} )
ELSE( EXISTS \"${TARGET_FILEPATH}\" )
	CONFIGURE_FILE( \"${TARGET_FILEPATH}.tmp\" \"${TARGET_FILEPATH}\" COPYONLY )
ENDIF( EXISTS \"${TARGET_FILEPATH}\" )
")

SET_SOURCE_FILES_PROPERTIES (  
	${TARGET_FILEPATH}
	PROPERTIES
	GENERATED TRUE
)

ADD_CUSTOM_TARGET(
	${NAME}_version
	COMMAND ${CMAKE_COMMAND} -P ${TARGET_DIRECTORY}/GenerateVersionHeader.cmake
	COMMENT "creating ${TARGET_FILEPATH}"
)

ADD_DEPENDENCIES(
	${NAME}
	${NAME}_version
)

ENDMACRO( GENERATE_VERSION )

MACRO( GENERATE_VERSION_RC NAME TARGET_FILEPATH VERSION APPNAME APPINTNAME EXENAME ISLIBRARY )

IF( WIN32 )

	GET_FILENAME_COMPONENT( TARGET_DIRECTORY "${TARGET_FILEPATH}" PATH )

	STRING( LENGTH "${VERSION}" VERSION_LENGTH )

	IF( VERSION_LENGTH LESS 1 )
		SET( VERSION_SPLIT_LENGTH 0 )
	ELSE( VERSION_LENGTH LESS 1 )
		STRING( REGEX MATCHALL [0-9]+ VERSION_SPLIT ${VERSION} )
		LIST( LENGTH VERSION_SPLIT VERSION_SPLIT_LENGTH )
	ENDIF( VERSION_LENGTH LESS 1 )

	IF( VERSION_SPLIT_LENGTH LESS 3 )
		SET( MAJOR_VER 0 )
		SET( MINOR_VER 0 )
		SET( PATCH_VER 0 )
	ELSE( VERSION_SPLIT_LENGTH LESS 3 )
		LIST( GET VERSION_SPLIT 0 MAJOR_VER )
		LIST( GET VERSION_SPLIT 1 MINOR_VER )
		LIST( GET VERSION_SPLIT 2 PATCH_VER )
		STRING( REGEX MATCH [a-z,A-Z]+.* VER_SUFFIX ${VERSION} )
	ENDIF( VERSION_SPLIT_LENGTH LESS 3 )

	IF( ${ISLIBRARY} )
		SET( FILETYPE VFT_DLL )
		SET( FILETYPEDESC "library" )
	ELSE( ${ISLIBRARY} )
		SET( FILETYPE VFT_APP )
		SET( FILETYPEDESC "application" )
	ENDIF( ${ISLIBRARY} )

	IF( POWERSHELL )
		FILE( WRITE ${TARGET_DIRECTORY}/GenerateVersionRc.cmake
"EXECUTE_PROCESS( COMMAND \"powershell\" \"-noprofile\" \"-C\" \"get-date -f yyyy\" TIMEOUT 30 OUTPUT_VARIABLE BUILDYEAR )
")
	ELSE( POWERSHELL )
		FILE( WRITE ${TARGET_DIRECTORY}/GenerateYearString.js
"var d = new Date();
WScript.echo( d.getFullYear() );
")
		FILE( WRITE ${TARGET_DIRECTORY}/GenerateVersionRc.cmake
"EXECUTE_PROCESS( COMMAND \"cscript\" \"/nologo\" \"GenerateYearString.js\" TIMEOUT 5 OUTPUT_VARIABLE BUILDYEAR )
")
	ENDIF( POWERSHELL )
	FILE( APPEND ${TARGET_DIRECTORY}/GenerateVersionRc.cmake
"STRING( SUBSTRING \${BUILDYEAR} 0 4 BUILDYEAR )

FILE( WRITE \"${TARGET_FILEPATH}.tmp\"
  \"#include <winver.h>

VS_VERSION_INFO VERSIONINFO
FILEVERSION ${MAJOR_VER}, ${MINOR_VER}, ${PATCH_VER}, 0
PRODUCTVERSION ${MAJOR_VER}, ${MINOR_VER}, ${PATCH_VER}, 0
FILEFLAGSMASK 0x17L
#ifdef _DEBUG
	FILEFLAGS VS_FF_DEBUG
#else
	FILEFLAGS 0x0L
#endif
FILEOS VOS_NT_WINDOWS32
FILETYPE ${FILETYPE}
FILESUBTYPE VFT2_UNKNOWN

BEGIN
	BLOCK \\\"StringFileInfo\\\"
	BEGIN
		BLOCK \\\"000004b0\\\"
		BEGIN
			VALUE \\\"CompanyName\\\", \\\"REC GmbH\\\"
			VALUE \\\"FileDescription\\\", \\\"${NAME} ${FILETYPEDESC}\\\"
			VALUE \\\"FileVersion\\\", \\\"${MAJOR_VER}, ${MINOR_VER}, ${PATCH_VER}, 0\\\"
			VALUE \\\"InternalName\\\", \\\"${APPINTNAME}\\\"
			VALUE \\\"LegalCopyright\\\", \\\"Copyright (C) 2004-\${BUILDYEAR} REC GmbH\\\"
			VALUE \\\"OriginalFilename\\\", \\\"${EXENAME}\\\"
			VALUE \\\"ProductName\\\", \\\"${APPNAME}\\\"
			VALUE \\\"ProductVersion\\\", \\\"${MAJOR_VER}, ${MINOR_VER}, ${PATCH_VER}, 0\\\"
		END
	END
	BLOCK \\\"VarFileInfo\\\"
	BEGIN
		VALUE \\\"Translation\\\", 0x0, 1200
	END
END
\" )

IF( EXISTS \"${TARGET_FILEPATH}\" )
	FILE( READ \"${TARGET_FILEPATH}\" CURRENT_VERSION_FILE )
	FILE( READ \"${TARGET_FILEPATH}.tmp\" TEMP_VERSION_FILE )
	IF( \${CURRENT_VERSION_FILE} STREQUAL \${TEMP_VERSION_FILE} )
	ELSE( \${CURRENT_VERSION_FILE} STREQUAL \${TEMP_VERSION_FILE} )
		CONFIGURE_FILE( \"${TARGET_FILEPATH}.tmp\" \"${TARGET_FILEPATH}\" COPYONLY )
	ENDIF( \${CURRENT_VERSION_FILE} STREQUAL \${TEMP_VERSION_FILE} )
ELSE( EXISTS \"${TARGET_FILEPATH}\" )
	CONFIGURE_FILE( \"${TARGET_FILEPATH}.tmp\" \"${TARGET_FILEPATH}\" COPYONLY )
ENDIF( EXISTS \"${TARGET_FILEPATH}\" )
")

	SET_SOURCE_FILES_PROPERTIES (  
		${TARGET_FILEPATH}
		PROPERTIES
		GENERATED TRUE
	)

	ADD_CUSTOM_TARGET(
		${NAME}_versionrc
		COMMAND ${CMAKE_COMMAND} -P ${TARGET_DIRECTORY}/GenerateVersionRc.cmake
		COMMENT "creating ${TARGET_FILEPATH}"
	)

	ADD_DEPENDENCIES(
		${NAME}
		${NAME}_versionrc
	)
ENDIF( WIN32 )

ENDMACRO( GENERATE_VERSION_RC )
