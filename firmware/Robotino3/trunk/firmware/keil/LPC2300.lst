


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* LPC2300.S: Startup file for Philips LPC2300 device s
                       eries                 */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2007 Keil - An ARM Company. All rights
                        reserved.            */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/******************************************************
                       ***********************/
   12 00000000         
   13 00000000         
   14 00000000         ;/*
   15 00000000         ; *  The LPC2300.S code is executed after CPU Reset. Thi
                       s file may be 
   16 00000000         ; *  translated with the following SET symbols. In uVisi
                       on these SET 
   17 00000000         ; *  symbols are entered under Options - ASM - Define.
   18 00000000         ; *
   19 00000000         ; *  NO_CLOCK_SETUP: when set the startup code will not 
                       initialize Clock 
   20 00000000         ; *  (used mostly when clock is already initialized from
                        script .ini 
   21 00000000         ; *  file).
   22 00000000         ; *
   23 00000000         ; *  NO_EMC_SETUP: when set the startup code will not in
                       itializes External 
   24 00000000         ; *  Memory Controller (used mostly when external memory
                        is already initialized 
   25 00000000         ; *  and loaded from script .ini file).
   26 00000000         ; *
   27 00000000         ; *  RAM_INTVEC: when set the startup code copies except
                       ion vectors 
   28 00000000         ; *  from on-chip Flash to on-chip RAM.
   29 00000000         ; *
   30 00000000         ; *  REMAP: when set the startup code initializes the re
                       gister MEMMAP 
   31 00000000         ; *  which overwrites the settings of the CPU configurat
                       ion pins. The 
   32 00000000         ; *  startup and interrupt vectors are remapped from:
   33 00000000         ; *     0x00000000  default setting (not remapped)
   34 00000000         ; *     0x40000000  when RAM_MODE is used
   35 00000000         ; *     0x80000000  when EXTMEM_MODE is used
   36 00000000         ; *
   37 00000000         ; *  EXTMEM_MODE: when set the device is configured for 
                       code execution
   38 00000000         ; *  from external memory starting at address 0x80000000



ARM Macro Assembler    Page 2 


                       .
   39 00000000         ; *
   40 00000000         ; *  RAM_MODE: when set the device is configured for cod
                       e execution
   41 00000000         ; *  from on-chip RAM starting at address 0x40000000. 
   42 00000000         ; */
   43 00000000         
   44 00000000         
   45 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   46 00000000         
   47 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   48 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   49 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   50 00000000 00000013 
                       Mode_SVC
                               EQU              0x13
   51 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   52 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
   53 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F
   54 00000000         
   55 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   56 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   57 00000000         
   58 00000000         
   59 00000000         ;----------------------- Memory Definitions ------------
                       ------------------------
   60 00000000         
   61 00000000         ; Internal Memory Base Addresses
   62 00000000 00000000 
                       FLASH_BASE
                               EQU              0x00000000
   63 00000000 40000000 
                       RAM_BASE
                               EQU              0x40000000
   64 00000000 80000000 
                       EXTMEM_BASE
                               EQU              0x80000000
   65 00000000         
   66 00000000         ; External Memory Base Addresses
   67 00000000 80000000 
                       STA_MEM0_BASE
                               EQU              0x80000000



ARM Macro Assembler    Page 3 


   68 00000000 81000000 
                       STA_MEM1_BASE
                               EQU              0x81000000
   69 00000000         
   70 00000000         
   71 00000000         ;----------------------- Stack and Heap Definitions ----
                       ------------------------
   72 00000000         
   73 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   74 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   75 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
   76 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   77 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   78 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   79 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   80 00000000         ;// </h>
   81 00000000         
   82 00000000 00000000 
                       UND_Stack_Size
                               EQU              0x00000000
   83 00000000 00000040 
                       SVC_Stack_Size
                               EQU              0x00000040
   84 00000000 00000000 
                       ABT_Stack_Size
                               EQU              0x00000000
   85 00000000 00000000 
                       FIQ_Stack_Size
                               EQU              0x00000000
   86 00000000 00000100 
                       IRQ_Stack_Size
                               EQU              0x00000100
   87 00000000 00000400 
                       USR_Stack_Size
                               EQU              0x00000400
   88 00000000         
   90 00000000 00000140 
                       ISR_Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
)
   91 00000000         
   92 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   93 00000000         
   94 00000000         Stack_Mem
                               SPACE            USR_Stack_Size
   95 00000400         __initial_sp
                               SPACE            ISR_Stack_Size
   96 00000540         
   97 00000540         Stack_Top
   98 00000540         
   99 00000540         
  100 00000540         ;// <h> Heap Configuration
  101 00000540         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
  102 00000540         ;// </h>
  103 00000540         
  104 00000540 00000000 
                       Heap_Size



ARM Macro Assembler    Page 4 


                               EQU              0x00000000
  105 00000540         
  106 00000540                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
  107 00000000         __heap_base
  108 00000000         Heap_Mem
                               SPACE            Heap_Size
  109 00000000         __heap_limit
  110 00000000         
  111 00000000         
  112 00000000         ;----------------------- System Control Block (SCB) Modu
                       le Definitions ---------
  113 00000000         
  114 00000000 E01FC000 
                       SCB_BASE
                               EQU              0xE01FC000  ; SCB Base Address
  115 00000000 00000080 
                       PLLCON_OFS
                               EQU              0x80        ; PLL Control Offse
                                                            t
  116 00000000 00000084 
                       PLLCFG_OFS
                               EQU              0x84        ; PLL Configuration
                                                             Offset
  117 00000000 00000088 
                       PLLSTAT_OFS
                               EQU              0x88        ; PLL Status Offset
                                                            
  118 00000000 0000008C 
                       PLLFEED_OFS
                               EQU              0x8C        ; PLL Feed Offset
  119 00000000 00000104 
                       CCLKCFG_OFS
                               EQU              0x104       ; CPU Clock Divider
                                                             Reg Offset
  120 00000000 00000108 
                       USBCLKCFG_OFS
                               EQU              0x108       ; USB Clock Divider
                                                             Reg Offset
  121 00000000 0000010C 
                       CLKSRCSEL_OFS
                               EQU              0x10C       ; Clock Source Sele
                                                            ct Reg Offset
  122 00000000 000001A0 
                       SCS_OFS EQU              0x1A0       ; System Control an
                                                            d Status Reg Offset
                                                            
  123 00000000 000001A8 
                       PCLKSEL0_OFS
                               EQU              0x1A8       ; Peripheral Clock 
                                                            Select Reg 0 Offset
                                                            
  124 00000000 000001AC 
                       PCLKSEL1_OFS
                               EQU              0x1AC       ; Peripheral Clock 
                                                            Select Reg 1 Offset
                                                            
  125 00000000         
  126 00000000 000000C0 



ARM Macro Assembler    Page 5 


                       PCON_OFS
                               EQU              0x0C0       ; Power Mode Contro
                                                            l Reg Offset
  127 00000000 000000C4 
                       PCONP_OFS
                               EQU              0x0C4       ; Power Control for
                                                             Periphs Reg Offset
                                                            
  128 00000000         
  129 00000000         ; Constants
  130 00000000 00000010 
                       OSCRANGE
                               EQU              (1<<4)      ; Oscillator Range 
                                                            Select
  131 00000000 00000020 
                       OSCEN   EQU              (1<<5)      ; Main oscillator E
                                                            nable
  132 00000000 00000040 
                       OSCSTAT EQU              (1<<6)      ; Main Oscillator S
                                                            tatus
  133 00000000 00000001 
                       PLLCON_PLLE
                               EQU              (1<<0)      ; PLL Enable
  134 00000000 00000002 
                       PLLCON_PLLC
                               EQU              (1<<1)      ; PLL Connect
  135 00000000 00007FFF 
                       PLLSTAT_M
                               EQU              (0x7FFF<<0) ; PLL M Value
  136 00000000 00FF0000 
                       PLLSTAT_N
                               EQU              (0xFF<<16)  ; PLL N Value
  137 00000000 04000000 
                       PLLSTAT_PLOCK
                               EQU              (1<<26)     ; PLL Lock Status
  138 00000000         
  139 00000000         ;// <e> Clock Setup
  140 00000000         ;//   <h> System Controls and Status Register (SCS)
  141 00000000         ;//     <o1.4>    OSCRANGE: Main Oscillator Range Select
                       
  142 00000000         ;//                     <0=>  1 MHz to 20 MHz
  143 00000000         ;//                     <1=> 15 MHz to 24 MHz
  144 00000000         ;//     <e1.5>       OSCEN: Main Oscillator Enable
  145 00000000         ;//     </e>
  146 00000000         ;//   </h>
  147 00000000         ;//
  148 00000000         ;//   <h> Clock Source Select Register (CLKSRCSEL)
  149 00000000         ;//     <o2.0..1>   CLKSRC: PLL Clock Source Selection
  150 00000000         ;//                     <0=> Internal RC oscillator
  151 00000000         ;//                     <1=> Main oscillator
  152 00000000         ;//                     <2=> RTC oscillator
  153 00000000         ;//   </h>
  154 00000000         ;//
  155 00000000         ;//   <h> PLL Configuration Register (PLLCFG)
  156 00000000         ;//                     <i> PLL_clk = (2* M * PLL_clk_sr
                       c) / N
  157 00000000         ;//     <o3.0..14>    MSEL: PLL Multiplier Selection
  158 00000000         ;//                     <1-32768><#-1>
  159 00000000         ;//                     <i> M Value



ARM Macro Assembler    Page 6 


  160 00000000         ;//     <o3.16..23>   NSEL: PLL Divider Selection
  161 00000000         ;//                     <1-256><#-1>
  162 00000000         ;//                     <i> N Value
  163 00000000         ;//   </h>
  164 00000000         ;//
  165 00000000         ;//   <h> CPU Clock Configuration Register (CCLKCFG)
  166 00000000         ;//     <o4.0..7>  CCLKSEL: Divide Value for CPU Clock f
                       rom PLL
  167 00000000         ;//                     <2-256:2><#-1>
  168 00000000         ;//   </h>
  169 00000000         ;//
  170 00000000         ;//   <h> USB Clock Configuration Register (USBCLKCFG)
  171 00000000         ;//     <o5.0..3>   USBSEL: Divide Value for USB Clock f
                       rom PLL
  172 00000000         ;//                     <1-16><#-1>
  173 00000000         ;//   </h>
  174 00000000         ;//
  175 00000000         ;//   <h> Peripheral Clock Selection Register 0 (PCLKSEL
                       0)
  176 00000000         ;//     <o6.0..1>      PCLK_WDT: Peripheral Clock Select
                       ion for WDT
  177 00000000         ;//                     <0=> Pclk = Cclk / 4
  178 00000000         ;//                     <1=> Pclk = Cclk
  179 00000000         ;//                     <2=> Pclk = Cclk / 2
  180 00000000         ;//                     <3=> Pclk = Hclk / 8
  181 00000000         ;//     <o6.2..3>   PCLK_TIMER0: Peripheral Clock Select
                       ion for TIMER0
  182 00000000         ;//                     <0=> Pclk = Cclk / 4
  183 00000000         ;//                     <1=> Pclk = Cclk
  184 00000000         ;//                     <2=> Pclk = Cclk / 2
  185 00000000         ;//                     <3=> Pclk = Hclk / 8
  186 00000000         ;//     <o6.4..5>   PCLK_TIMER1: Peripheral Clock Select
                       ion for TIMER1
  187 00000000         ;//                     <0=> Pclk = Cclk / 4
  188 00000000         ;//                     <1=> Pclk = Cclk
  189 00000000         ;//                     <2=> Pclk = Cclk / 2
  190 00000000         ;//                     <3=> Pclk = Hclk / 8
  191 00000000         ;//     <o6.6..7>    PCLK_UART0: Peripheral Clock Select
                       ion for UART0
  192 00000000         ;//                     <0=> Pclk = Cclk / 4
  193 00000000         ;//                     <1=> Pclk = Cclk
  194 00000000         ;//                     <2=> Pclk = Cclk / 2
  195 00000000         ;//                     <3=> Pclk = Hclk / 8
  196 00000000         ;//     <o6.8..9>    PCLK_UART1: Peripheral Clock Select
                       ion for UART1
  197 00000000         ;//                     <0=> Pclk = Cclk / 4
  198 00000000         ;//                     <1=> Pclk = Cclk
  199 00000000         ;//                     <2=> Pclk = Cclk / 2
  200 00000000         ;//                     <3=> Pclk = Hclk / 8
  201 00000000         ;//     <o6.10..11>   PCLK_PWM0: Peripheral Clock Select
                       ion for PWM0
  202 00000000         ;//                     <0=> Pclk = Cclk / 4
  203 00000000         ;//                     <1=> Pclk = Cclk
  204 00000000         ;//                     <2=> Pclk = Cclk / 2
  205 00000000         ;//                     <3=> Pclk = Hclk / 8
  206 00000000         ;//     <o6.12..13>   PCLK_PWM1: Peripheral Clock Select
                       ion for PWM1
  207 00000000         ;//                     <0=> Pclk = Cclk / 4
  208 00000000         ;//                     <1=> Pclk = Cclk



ARM Macro Assembler    Page 7 


  209 00000000         ;//                     <2=> Pclk = Cclk / 2
  210 00000000         ;//                     <3=> Pclk = Hclk / 8
  211 00000000         ;//     <o6.14..15>   PCLK_I2C0: Peripheral Clock Select
                       ion for I2C0
  212 00000000         ;//                     <0=> Pclk = Cclk / 4
  213 00000000         ;//                     <1=> Pclk = Cclk
  214 00000000         ;//                     <2=> Pclk = Cclk / 2
  215 00000000         ;//                     <3=> Pclk = Hclk / 8
  216 00000000         ;//     <o6.16..17>    PCLK_SPI: Peripheral Clock Select
                       ion for SPI
  217 00000000         ;//                     <0=> Pclk = Cclk / 4
  218 00000000         ;//                     <1=> Pclk = Cclk
  219 00000000         ;//                     <2=> Pclk = Cclk / 2
  220 00000000         ;//                     <3=> Pclk = Hclk / 8
  221 00000000         ;//     <o6.18..19>    PCLK_RTC: Peripheral Clock Select
                       ion for RTC
  222 00000000         ;//                     <0=> Pclk = Cclk / 4
  223 00000000         ;//                     <1=> Pclk = Cclk
  224 00000000         ;//                     <2=> Pclk = Cclk / 2
  225 00000000         ;//                     <3=> Pclk = Hclk / 8
  226 00000000         ;//     <o6.20..21>   PCLK_SSP1: Peripheral Clock Select
                       ion for SSP1
  227 00000000         ;//                     <0=> Pclk = Cclk / 4
  228 00000000         ;//                     <1=> Pclk = Cclk
  229 00000000         ;//                     <2=> Pclk = Cclk / 2
  230 00000000         ;//                     <3=> Pclk = Hclk / 8
  231 00000000         ;//     <o6.22..23>    PCLK_DAC: Peripheral Clock Select
                       ion for DAC
  232 00000000         ;//                     <0=> Pclk = Cclk / 4
  233 00000000         ;//                     <1=> Pclk = Cclk
  234 00000000         ;//                     <2=> Pclk = Cclk / 2
  235 00000000         ;//                     <3=> Pclk = Hclk / 8
  236 00000000         ;//     <o6.24..25>    PCLK_ADC: Peripheral Clock Select
                       ion for ADC
  237 00000000         ;//                     <0=> Pclk = Cclk / 4
  238 00000000         ;//                     <1=> Pclk = Cclk
  239 00000000         ;//                     <2=> Pclk = Cclk / 2
  240 00000000         ;//                     <3=> Pclk = Hclk / 8
  241 00000000         ;//     <o6.26..27>   PCLK_CAN1: Peripheral Clock Select
                       ion for CAN1
  242 00000000         ;//                     <0=> Pclk = Cclk / 4
  243 00000000         ;//                     <1=> Pclk = Cclk
  244 00000000         ;//                     <2=> Pclk = Cclk / 2
  245 00000000         ;//                     <3=> Pclk = Hclk / 6
  246 00000000         ;//     <o6.28..29>   PCLK_CAN2: Peripheral Clock Select
                       ion for CAN2
  247 00000000         ;//                     <0=> Pclk = Cclk / 4
  248 00000000         ;//                     <1=> Pclk = Cclk
  249 00000000         ;//                     <2=> Pclk = Cclk / 2
  250 00000000         ;//                     <3=> Pclk = Hclk / 6
  251 00000000         ;//     <o6.30..31>    PCLK_ACF: Peripheral Clock Select
                       ion for ACF
  252 00000000         ;//                     <0=> Pclk = Cclk / 4
  253 00000000         ;//                     <1=> Pclk = Cclk
  254 00000000         ;//                     <2=> Pclk = Cclk / 2
  255 00000000         ;//                     <3=> Pclk = Hclk / 6
  256 00000000         ;//   </h>
  257 00000000         ;//
  258 00000000         ;//   <h> Peripheral Clock Selection Register 1 (PCLKSEL



ARM Macro Assembler    Page 8 


                       1)
  259 00000000         ;//     <o7.0..1>  PCLK_BAT_RAM: Peripheral Clock Select
                       ion for the Battery Supported RAM
  260 00000000         ;//                     <0=> Pclk = Cclk / 4
  261 00000000         ;//                     <1=> Pclk = Cclk
  262 00000000         ;//                     <2=> Pclk = Cclk / 2
  263 00000000         ;//                     <3=> Pclk = Hclk / 8
  264 00000000         ;//     <o7.2..3>     PCLK_GPIO: Peripheral Clock Select
                       ion for GPIOs
  265 00000000         ;//                     <0=> Pclk = Cclk / 4
  266 00000000         ;//                     <1=> Pclk = Cclk
  267 00000000         ;//                     <2=> Pclk = Cclk / 2
  268 00000000         ;//                     <3=> Pclk = Hclk / 8
  269 00000000         ;//     <o7.4..5>      PCLK_PCB: Peripheral Clock Select
                       ion for Pin Connect Block
  270 00000000         ;//                     <0=> Pclk = Cclk / 4
  271 00000000         ;//                     <1=> Pclk = Cclk
  272 00000000         ;//                     <2=> Pclk = Cclk / 2
  273 00000000         ;//                     <3=> Pclk = Hclk / 8
  274 00000000         ;//     <o7.6..7>     PCLK_I2C1: Peripheral Clock Select
                       ion for I2C1
  275 00000000         ;//                     <0=> Pclk = Cclk / 4
  276 00000000         ;//                     <1=> Pclk = Cclk
  277 00000000         ;//                     <2=> Pclk = Cclk / 2
  278 00000000         ;//                     <3=> Pclk = Hclk / 8
  279 00000000         ;//     <o7.10..11>   PCLK_SSP0: Peripheral Clock Select
                       ion for SSP0
  280 00000000         ;//                     <0=> Pclk = Cclk / 4
  281 00000000         ;//                     <1=> Pclk = Cclk
  282 00000000         ;//                     <2=> Pclk = Cclk / 2
  283 00000000         ;//                     <3=> Pclk = Hclk / 8
  284 00000000         ;//     <o7.12..13> PCLK_TIMER2: Peripheral Clock Select
                       ion for TIMER2
  285 00000000         ;//                     <0=> Pclk = Cclk / 4
  286 00000000         ;//                     <1=> Pclk = Cclk
  287 00000000         ;//                     <2=> Pclk = Cclk / 2
  288 00000000         ;//                     <3=> Pclk = Hclk / 8
  289 00000000         ;//     <o7.14..15> PCLK_TIMER3: Peripheral Clock Select
                       ion for TIMER3
  290 00000000         ;//                     <0=> Pclk = Cclk / 4
  291 00000000         ;//                     <1=> Pclk = Cclk
  292 00000000         ;//                     <2=> Pclk = Cclk / 2
  293 00000000         ;//                     <3=> Pclk = Hclk / 8
  294 00000000         ;//     <o7.16..17>  PCLK_UART2: Peripheral Clock Select
                       ion for UART2
  295 00000000         ;//                     <0=> Pclk = Cclk / 4
  296 00000000         ;//                     <1=> Pclk = Cclk
  297 00000000         ;//                     <2=> Pclk = Cclk / 2
  298 00000000         ;//                     <3=> Pclk = Hclk / 8
  299 00000000         ;//     <o7.18..19>  PCLK_UART3: Peripheral Clock Select
                       ion for UART3
  300 00000000         ;//                     <0=> Pclk = Cclk / 4
  301 00000000         ;//                     <1=> Pclk = Cclk
  302 00000000         ;//                     <2=> Pclk = Cclk / 2
  303 00000000         ;//                     <3=> Pclk = Hclk / 8
  304 00000000         ;//     <o7.20..21>   PCLK_I2C2: Peripheral Clock Select
                       ion for I2C2
  305 00000000         ;//                     <0=> Pclk = Cclk / 4
  306 00000000         ;//                     <1=> Pclk = Cclk



ARM Macro Assembler    Page 9 


  307 00000000         ;//                     <2=> Pclk = Cclk / 2
  308 00000000         ;//                     <3=> Pclk = Hclk / 8
  309 00000000         ;//     <o7.22..23>    PCLK_I2S: Peripheral Clock Select
                       ion for I2S
  310 00000000         ;//                     <0=> Pclk = Cclk / 4
  311 00000000         ;//                     <1=> Pclk = Cclk
  312 00000000         ;//                     <2=> Pclk = Cclk / 2
  313 00000000         ;//                     <3=> Pclk = Hclk / 8
  314 00000000         ;//     <o7.24..25>    PCLK_MCI: Peripheral Clock Select
                       ion for MCI
  315 00000000         ;//                     <0=> Pclk = Cclk / 4
  316 00000000         ;//                     <1=> Pclk = Cclk
  317 00000000         ;//                     <2=> Pclk = Cclk / 2
  318 00000000         ;//                     <3=> Pclk = Hclk / 8
  319 00000000         ;//     <o7.28..29> PCLK_SYSCON: Peripheral Clock Select
                       ion for System Control Block
  320 00000000         ;//                     <0=> Pclk = Cclk / 4
  321 00000000         ;//                     <1=> Pclk = Cclk
  322 00000000         ;//                     <2=> Pclk = Cclk / 2
  323 00000000         ;//                     <3=> Pclk = Hclk / 8
  324 00000000         ;//   </h>
  325 00000000         ;//   <h> Power Control for Peripherals Register (PCONP)
                       
  326 00000000         ;//     <o8.31>     PCUSB: USB interface power/clock ena
                       ble
  327 00000000         ;//     <o8.30>     PCENET: Ethernet block power/clock e
                       nable
  328 00000000         ;//     <o8.29>     PCGPDMA: GP DMA function power/clock
                        enable
  329 00000000         ;//     <o8.28>     PCSDC: SD card interface power/clock
                        enable
  330 00000000         ;//     <o8.27>     PCI2S: I2S interface power/clock ena
                       ble
  331 00000000         ;//     <o8.26>     PCI2C2: I2C interface 2 power/clock 
                       enable
  332 00000000         ;//     <o8.25>     PCUART3: UART 3 power/clock enable
  333 00000000         ;//     <o8.24>     PCUART2: UART 2 power/clock enable
  334 00000000         ;//     <o8.23>     PCTIM3: Timer 3 power/clock enable
  335 00000000         ;//     <o8.22>     PCTIM2: Timer 2 power/clock enable
  336 00000000         ;//     <o8.21>     PCSSP0: SSP interface 0 power/clock 
                       enable
  337 00000000         ;//     <o8.19>     PCI2C1: I2C interface 1 power/clock 
                       enable
  338 00000000         ;//     <o8.14>     PCAN2: CAN controller 2 power/clock 
                       enable
  339 00000000         ;//     <o8.13>     PCAN1: CAN controller 1 power/clock 
                       enable
  340 00000000         ;//     <o8.12>     PCAD: A/D converter power/clock enab
                       le
  341 00000000         ;//     <o8.11>     PCEMC: External memory controller po
                       wer/clock enable
  342 00000000         ;//     <o8.10>     PCSSP1: SSP interface 1 power/clock 
                       enable
  343 00000000         ;//     <o8.9>      PCRTC: RTC power/clock enable
  344 00000000         ;//     <o8.8>      PCSPI: SPI interface power/clock ena
                       ble
  345 00000000         ;//     <o8.7>      PCI2C0: I2C interface 0 power/clock 
                       enable
  346 00000000         ;//     <o8.6>      PCPWM1: PWM 1 power/clock enable



ARM Macro Assembler    Page 10 


  347 00000000         ;//     <o8.4>      PCUART1: UART 1 power/clock enable
  348 00000000         ;//     <o8.3>      PCUART0: UART 0 power/clock enable
  349 00000000         ;//     <o8.2>      PCTIM1: Timer/Counter 1 power/clock 
                       enable
  350 00000000         ;//     <o8.1>      PCTIM0: Timer/Counter 0 power/clock 
                       enable
  351 00000000         ;//   </h>
  352 00000000         ;// </e>
  353 00000000 00000001 
                       CLOCK_SETUP
                               EQU              1
  354 00000000 00000020 
                       SCS_Val EQU              0x00000020
  355 00000000 00000001 
                       CLKSRCSEL_Val
                               EQU              0x00000001
  356 00000000 0000000B 
                       PLLCFG_Val
                               EQU              0x0000000B
  357 00000000 00000005 
                       CCLKCFG_Val
                               EQU              0x00000005
  358 00000000 00000005 
                       USBCLKCFG_Val
                               EQU              0x00000005
  359 00000000 A8114000 
                       PCLKSEL0_Val
                               EQU              0xA8114000
  360 00000000 00000000 
                       PCLKSEL1_Val
                               EQU              0x00000000
  361 00000000 83C02FDE 
                       PCONP_Val
                               EQU              0x83C02FDE
  362 00000000         
  363 00000000         ;----------------------- Memory Accelerator Module (MAM)
                        Definitions -----------
  364 00000000         
  365 00000000 E01FC000 
                       MAM_BASE
                               EQU              0xE01FC000  ; MAM Base Address
  366 00000000 00000000 
                       MAMCR_OFS
                               EQU              0x00        ; MAM Control Offse
                                                            t
  367 00000000 00000004 
                       MAMTIM_OFS
                               EQU              0x04        ; MAM Timing Offset
                                                            
  368 00000000         
  369 00000000         ;// <e> MAM Setup
  370 00000000         ;//   <o1.0..1>   MAM Control
  371 00000000         ;//               <0=> Disabled
  372 00000000         ;//               <1=> Partially Enabled
  373 00000000         ;//               <2=> Fully Enabled
  374 00000000         ;//               <i> Mode
  375 00000000         ;//   <o2.0..2>   MAM Timing
  376 00000000         ;//               <0=> Reserved  <1=> 1   <2=> 2   <3=> 
                       3



ARM Macro Assembler    Page 11 


  377 00000000         ;//               <4=> 4         <5=> 5   <6=> 6   <7=> 
                       7
  378 00000000         ;//               <i> Fetch Cycles
  379 00000000         ;// </e>
  380 00000000 00000001 
                       MAM_SETUP
                               EQU              1
  381 00000000 00000002 
                       MAMCR_Val
                               EQU              0x00000002
  382 00000000 00000004 
                       MAMTIM_Val
                               EQU              0x00000004
  383 00000000         
  384 00000000         
  385 00000000         ;----------------------- Pin Connect Block Definitions -
                       ------------------------
  386 00000000         
  387 00000000 E002C000 
                       PCB_BASE
                               EQU              0xE002C000  ; PCB Base Address
  388 00000000 00000000 
                       PINSEL0_OFS
                               EQU              0x00        ; PINSEL0  Address 
                                                            Offset
  389 00000000 00000004 
                       PINSEL1_OFS
                               EQU              0x04        ; PINSEL1  Address 
                                                            Offset
  390 00000000 00000008 
                       PINSEL2_OFS
                               EQU              0x08        ; PINSEL2  Address 
                                                            Offset
  391 00000000 0000000C 
                       PINSEL3_OFS
                               EQU              0x0C        ; PINSEL3  Address 
                                                            Offset
  392 00000000 00000010 
                       PINSEL4_OFS
                               EQU              0x10        ; PINSEL4  Address 
                                                            Offset
  393 00000000 00000014 
                       PINSEL5_OFS
                               EQU              0x14        ; PINSEL5  Address 
                                                            Offset
  394 00000000 00000018 
                       PINSEL6_OFS
                               EQU              0x18        ; PINSEL6  Address 
                                                            Offset
  395 00000000 0000001C 
                       PINSEL7_OFS
                               EQU              0x1C        ; PINSEL7  Address 
                                                            Offset
  396 00000000 00000020 
                       PINSEL8_OFS
                               EQU              0x20        ; PINSEL8  Address 
                                                            Offset
  397 00000000 00000024 
                       PINSEL9_OFS



ARM Macro Assembler    Page 12 


                               EQU              0x24        ; PINSEL9  Address 
                                                            Offset
  398 00000000 00000028 
                       PINSEL10_OFS
                               EQU              0x28        ; PINSEL10 Address 
                                                            Offset
  399 00000000         
  400 00000000         
  401 00000000         ;----------------------- External Memory Controller (EMC
                       ) Definitons -----------
  402 00000000         
  403 00000000 FFE08000 
                       EMC_BASE
                               EQU              0xFFE08000  ; EMC Base Address
  404 00000000         
  405 00000000 00000000 
                       EMC_CTRL_OFS
                               EQU              0x000       ; EMCControl
  406 00000000 00000004 
                       EMC_STAT_OFS
                               EQU              0x004       ; EMCStatus
  407 00000000 00000008 
                       EMC_CONFIG_OFS
                               EQU              0x008       ; EMCConfig
  408 00000000 00000200 
                       EMC_STA_CFG0_OFS
                               EQU              0x200       ; EMCStaticConfig0
  409 00000000 00000204 
                       EMC_STA_WWEN0_OFS
                               EQU              0x204       ; EMCStaticWaitWen0
                                                            
  410 00000000 00000208 
                       EMC_STA_WOEN0_OFS
                               EQU              0x208       ; EMCStaticWaitOen0
                                                            
  411 00000000 0000020C 
                       EMC_STA_WRD0_OFS
                               EQU              0x20C       ; EMCStaticWaitRd0
  412 00000000 00000210 
                       EMC_STA_WPAGE0_OFS
                               EQU              0x210       ; EMCStaticWaitPage
                                                            0
  413 00000000 00000214 
                       EMC_STA_WWR0_OFS
                               EQU              0x214       ; EMCStaticWaitWr0
  414 00000000 00000218 
                       EMC_STA_WTURN0_OFS
                               EQU              0x218       ; EMCStaticWaitTurn
                                                            0
  415 00000000 00000220 
                       EMC_STA_CFG1_OFS
                               EQU              0x220       ; EMCStaticConfig1
  416 00000000 00000224 
                       EMC_STA_WWEN1_OFS
                               EQU              0x224       ; EMCStaticWaitWen1
                                                            
  417 00000000 00000228 
                       EMC_STA_WOEN1_OFS
                               EQU              0x228       ; EMCStaticWaitOen1



ARM Macro Assembler    Page 13 


                                                            
  418 00000000 0000022C 
                       EMC_STA_WRD1_OFS
                               EQU              0x22C       ; EMCStaticWaitRd1
  419 00000000 00000230 
                       EMC_STA_WPAGE1_OFS
                               EQU              0x230       ; EMCStaticWaitPage
                                                            1
  420 00000000 00000234 
                       EMC_STA_WWR1_OFS
                               EQU              0x234       ; EMCStaticWaitWr1
  421 00000000 00000238 
                       EMC_STA_WTURN1_OFS
                               EQU              0x238       ; EMCStaticWaitTurn
                                                            1
  422 00000000 00000880 
                       EMC_STA_EXT_W_OFS
                               EQU              0x880       ; EMCStaticExtended
                                                            Wait
  423 00000000         
  424 00000000 00080000 
                       BUFEN_Const
                               EQU              (1 << 19)   ; Buffer enable bit
                                                            
  425 00000000 00000800 
                       EMC_PCONP_Const
                               EQU              (1 << 11)   ; PCONP val to enab
                                                            le power for EMC
  426 00000000         
  427 00000000         ; External Memory Pins definitions
  428 00000000         ; pin functions for external memory interfacing
  429 00000000 00005555 
                       EMC_PINSEL6_Val
                               EQU              0x00005555  ; D0 .. D7
  430 00000000 00000055 
                       EMC_PINSEL8_Val
                               EQU              0x55        ; A0 .. A3
  431 00000000 50090000 
                       EMC_PINSEL9_Val
                               EQU              0x50090000  ;     ; !OE, !WE (B
                                                            LS0 because of erra
                                                            ta), !CS0, !CS1
  432 00000000         
  433 00000000         ;//     External Memory Controller Setup (EMC) ---------
                       ------------------------
  434 00000000         ;// <e> External Memory Controller Setup (EMC)
  435 00000000 00000001 
                       EMC_SETUP
                               EQU              1
  436 00000000         
  437 00000000         ;//   <h> EMC Control Register (EMCControl)
  438 00000000         ;//     <i> Controls operation of the memory controller
  439 00000000         ;//     <o0.2> L: Low-power mode enable
  440 00000000         ;//     <o0.1> M: Address mirror enable
  441 00000000         ;//     <o0.0> E: EMC enable
  442 00000000         ;//   </h>
  443 00000000 00000001 
                       EMC_CTRL_Val
                               EQU              0x00000001



ARM Macro Assembler    Page 14 


  444 00000000         
  445 00000000         ;//   <h> EMC Configuration Register (EMCConfig)
  446 00000000         ;//     <o0.0> Endian mode
  447 00000000         ;//       <0=> Little-endian
  448 00000000         ;//       <1=> Big-endian
  449 00000000         ;//   </h>
  450 00000000 00000000 
                       EMC_CONFIG_Val
                               EQU              0x00000000
  451 00000000         
  452 00000000         ;//       Configure External Bus Behaviour for Static CS
                       0 Area -----------------
  453 00000000         ;//   <e> Configure External Bus Behaviour for Static CS
                       0 Area
  454 00000000 00000001 
                       EMC_STACS0_SETUP
                               EQU              1
  455 00000000         
  456 00000000         ;//     <h> Static Memory Configuration Register (EMCSta
                       ticConfig0)
  457 00000000         ;//       <i> Defines the configuration information for 
                       the static memory CS0
  458 00000000         ;//       <o0.20> WP: Write protect
  459 00000000         ;//       <o0.19> B: Write buffer enable
  460 00000000         ;//       <o0.8> EW: Extended wait enable
  461 00000000         ;//       <o0.6> PC: Chip select polarity
  462 00000000         ;//         <0=> Active LOW chip select
  463 00000000         ;//         <1=> Active HIGH chip select
  464 00000000         ;//       <o0.3> PM: Async page mode enable
  465 00000000         ;//       <o0.0..1> MW: Memory width
  466 00000000         ;//         <0=> 8 bit
  467 00000000         ;//         <1=> 16 bit
  468 00000000         ;//         <2=> 32 bit
  469 00000000         ;//     </h>
  470 00000000 00000100 
                       EMC_STA_CFG0_Val
                               EQU              0x00000100
  471 00000000         
  472 00000000         ;//     <h> Static Memory Write Enable Delay Register (E
                       MCStaticWaitWen0)
  473 00000000         ;//       <i> Selects the delay from CS0 to write enable
                       
  474 00000000         ;//       <o.0..3> WAITWEN: Wait write enable <1-16> <#-
                       1>
  475 00000000         ;//         <i> The delay is in CCLK cycles
  476 00000000         ;//     </h>
  477 00000000 00000002 
                       EMC_STA_WWEN0_Val
                               EQU              0x00000002
  478 00000000         
  479 00000000         ;//     <h> Static Memory Output Enable Delay register (
                       EMCStaticWaitOen0)
  480 00000000         ;//       <i> Selects the delay from CS0 or address chan
                       ge, whichever is later, to output enable
  481 00000000         ;//       <o.0..3> WAITOEN: Wait output enable <0-15>
  482 00000000         ;//         <i> The delay is in CCLK cycles
  483 00000000         ;//     </h>
  484 00000000 00000002 
                       EMC_STA_WOEN0_Val



ARM Macro Assembler    Page 15 


                               EQU              0x00000002
  485 00000000         
  486 00000000         ;//     <h> Static Memory Read Delay Register (EMCStatic
                       WaitRd0)
  487 00000000         ;//       <i> Selects the delay from CS0 to a read acces
                       s
  488 00000000         ;//       <o.0..4> WAITRD: Non-page mode read wait state
                       s or asynchronous page mode read first access wait state
                       s <1-32> <#-1>
  489 00000000         ;//         <i> The delay is in CCLK cycles
  490 00000000         ;//     </h>
  491 00000000 0000001F 
                       EMC_STA_WRD0_Val
                               EQU              0x0000001F
  492 00000000         
  493 00000000         ;//     <h> Static Memory Page Mode Read Delay Register 
                       (EMCStaticWaitPage0)
  494 00000000         ;//       <i> Selects the delay for asynchronous page mo
                       de sequential accesses for CS0
  495 00000000         ;//       <o.0..4> WAITPAGE: Asynchronous page mode read
                        after the first read wait states <1-32> <#-1>
  496 00000000         ;//         <i> The delay is in CCLK cycles
  497 00000000         ;//     </h>
  498 00000000 0000001F 
                       EMC_STA_WPAGE0_Val
                               EQU              0x0000001F
  499 00000000         
  500 00000000         ;//     <h> Static Memory Write Delay Register (EMCStati
                       cWaitWr0)
  501 00000000         ;//       <i> Selects the delay from CS0 to a write acce
                       ss
  502 00000000         ;//       <o.0..4> WAITWR: Write wait states <2-33> <#-2
                       >
  503 00000000         ;//         <i> The delay is in CCLK cycles
  504 00000000         ;//     </h>
  505 00000000 0000001F 
                       EMC_STA_WWR0_Val
                               EQU              0x0000001F
  506 00000000         
  507 00000000         ;//     <h> Static Memory Turn Round Delay Register (EMC
                       StaticWaitTurn0)
  508 00000000         ;//       <i> Selects the number of bus turnaround cycle
                       s for CS0
  509 00000000         ;//       <o.0..4> WAITTURN: Bus turnaround cycles <1-16
                       > <#-1>
  510 00000000         ;//         <i> The delay is in CCLK cycles
  511 00000000         ;//     </h>
  512 00000000 0000000F 
                       EMC_STA_WTURN0_Val
                               EQU              0x0000000F
  513 00000000         
  514 00000000         ;//   </e> End of Static Setup for Static CS0 Area
  515 00000000         
  516 00000000         ;//       Configure External Bus Behaviour for Static CS
                       1 Area -----------------
  517 00000000         ;//   <e> Configure External Bus Behaviour for Static CS
                       1 Area
  518 00000000 00000000 
                       EMC_STACS1_SETUP



ARM Macro Assembler    Page 16 


                               EQU              0
  519 00000000         
  520 00000000         ;//     <h> Static Memory Configuration Register (EMCSta
                       ticConfig1)
  521 00000000         ;//       <i> Defines the configuration information for 
                       the static memory CS1
  522 00000000         ;//       <o0.20> WP: Write protect
  523 00000000         ;//       <o0.19> B: Write buffer enable
  524 00000000         ;//       <o0.8> EW: Extended wait enable
  525 00000000         ;//       <o0.6> PC: Chip select polarity
  526 00000000         ;//         <0=> Active LOW chip select
  527 00000000         ;//         <1=> Active HIGH chip select
  528 00000000         ;//       <o0.3> PM: Async page mode enable
  529 00000000         ;//       <o0.0..1> MW: Memory width
  530 00000000         ;//         <0=> 8 bit
  531 00000000         ;//         <1=> 16 bit
  532 00000000         ;//         <2=> 32 bit
  533 00000000         ;//     </h>
  534 00000000 00000000 
                       EMC_STA_CFG1_Val
                               EQU              0x00000000
  535 00000000         
  536 00000000         ;//     <h> Static Memory Write Enable Delay Register (E
                       MCStaticWaitWen1)
  537 00000000         ;//       <i> Selects the delay from CS1 to write enable
                       
  538 00000000         ;//       <o.0..3> WAITWEN: Wait write enable <1-16> <#-
                       1>
  539 00000000         ;//         <i> The delay is in CCLK cycles
  540 00000000         ;//     </h>
  541 00000000 00000000 
                       EMC_STA_WWEN1_Val
                               EQU              0x00000000
  542 00000000         
  543 00000000         ;//     <h> Static Memory Output Enable Delay register (
                       EMCStaticWaitOen1)
  544 00000000         ;//       <i> Selects the delay from CS1 or address chan
                       ge, whichever is later, to output enable
  545 00000000         ;//       <o.0..3> WAITOEN: Wait output enable <0-15>
  546 00000000         ;//         <i> The delay is in CCLK cycles
  547 00000000         ;//     </h>
  548 00000000 00000000 
                       EMC_STA_WOEN1_Val
                               EQU              0x00000000
  549 00000000         
  550 00000000         ;//     <h> Static Memory Read Delay Register (EMCStatic
                       WaitRd1)
  551 00000000         ;//       <i> Selects the delay from CS1 to a read acces
                       s
  552 00000000         ;//       <o.0..4> WAITRD: Non-page mode read wait state
                       s or asynchronous page mode read first access wait state
                       s <1-32> <#-1>
  553 00000000         ;//         <i> The delay is in CCLK cycles
  554 00000000         ;//     </h>
  555 00000000 0000001F 
                       EMC_STA_WRD1_Val
                               EQU              0x0000001F
  556 00000000         
  557 00000000         ;//     <h> Static Memory Page Mode Read Delay Register 



ARM Macro Assembler    Page 17 


                       (EMCStaticWaitPage0)
  558 00000000         ;//       <i> Selects the delay for asynchronous page mo
                       de sequential accesses for CS1
  559 00000000         ;//       <o.0..4> WAITPAGE: Asynchronous page mode read
                        after the first read wait states <1-32> <#-1>
  560 00000000         ;//         <i> The delay is in CCLK cycles
  561 00000000         ;//     </h>
  562 00000000 0000001F 
                       EMC_STA_WPAGE1_Val
                               EQU              0x0000001F
  563 00000000         
  564 00000000         ;//     <h> Static Memory Write Delay Register (EMCStati
                       cWaitWr1)
  565 00000000         ;//       <i> Selects the delay from CS1 to a write acce
                       ss
  566 00000000         ;//       <o.0..4> WAITWR: Write wait states <2-33> <#-2
                       >
  567 00000000         ;//         <i> The delay is in CCLK cycles
  568 00000000         ;//     </h>
  569 00000000 0000001F 
                       EMC_STA_WWR1_Val
                               EQU              0x0000001F
  570 00000000         
  571 00000000         ;//     <h> Static Memory Turn Round Delay Register (EMC
                       StaticWaitTurn1)
  572 00000000         ;//       <i> Selects the number of bus turnaround cycle
                       s for CS1
  573 00000000         ;//       <o.0..4> WAITTURN: Bus turnaround cycles <1-16
                       > <#-1>
  574 00000000         ;//         <i> The delay is in CCLK cycles
  575 00000000         ;//     </h>
  576 00000000 0000000F 
                       EMC_STA_WTURN1_Val
                               EQU              0x0000000F
  577 00000000         
  578 00000000         ;//   </e> End of Static Setup for Static CS1 Area
  579 00000000         
  580 00000000         ;//   <h> Static Memory Extended Wait Register (EMCStati
                       cExtendedWait)
  581 00000000         ;//     <i> Time long static memory read and write trans
                       fers
  582 00000000         ;//     <o.0..9> EXTENDEDWAIT: Extended wait time out <1
                       -64><#-1>
  583 00000000         ;//       <i> The delay is in (16 * CCLK) cycles
  584 00000000         ;//   </h>
  585 00000000 00000000 
                       EMC_STA_EXT_W_Val
                               EQU              0x00000000
  586 00000000         
  587 00000000         ;// </e> End of EMC Setup
  588 00000000         
  589 00000000         
  590 00000000                 PRESERVE8
  591 00000000         
  592 00000000         ; Area Definition and Entry Point
  593 00000000         ;  Startup Code must be linked first at Address at which
                        it expects to run.
  594 00000000         
  595 00000000                 AREA             RESET, CODE, READONLY



ARM Macro Assembler    Page 18 


  596 00000000                 ARM
  597 00000000         
  598 00000000         
  599 00000000         ; Exception Vectors
  600 00000000         ;  Mapped to Address 0.
  601 00000000         ;  Absolute addressing mode must be used.
  602 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
  603 00000000         
  604 00000000 E59FF018 
                       Vectors LDR              PC, Reset_Addr
  605 00000004 E59FF018        LDR              PC, Undef_Addr
  606 00000008 E59FF018        LDR              PC, SWI_Addr
  607 0000000C E59FF018        LDR              PC, PAbt_Addr
  608 00000010 E59FF018        LDR              PC, DAbt_Addr
  609 00000014 E1A00000        NOP                          ; Reserved Vector 
  610 00000018         ;               LDR     PC, IRQ_Addr
  611 00000018 E51FF120        LDR              PC, [PC, #-0x0120] ; Vector fro
                                                            m VicVectAddr
  612 0000001C E59FF018        LDR              PC, FIQ_Addr
  613 00000020         
  614 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
  615 00000024 00000000 
                       Undef_Addr
                               DCD              Undef_Handler
  616 00000028 00000000 
                       SWI_Addr
                               DCD              SWI_Handler
  617 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbt_Handler
  618 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbt_Handler
  619 00000034 00000000        DCD              0           ; Reserved Address 
                                                            
  620 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQ_Handler
  621 0000003C 00000000 
                       FIQ_Addr
                               DCD              FIQ_Handler
  622 00000040         
  623 00000040                 IMPORT           SWI_Handler
  624 00000040         
  625 00000040 EAFFFFFE 
                       Undef_Handler
                               B                Undef_Handler
  626 00000044         ;SWI_Handler     B       SWI_Handler
  627 00000044 EAFFFFFE 
                       PAbt_Handler
                               B                PAbt_Handler
  628 00000048 EAFFFFFE 
                       DAbt_Handler
                               B                DAbt_Handler
  629 0000004C EAFFFFFE 
                       IRQ_Handler



ARM Macro Assembler    Page 19 


                               B                IRQ_Handler
  630 00000050 EAFFFFFE 
                       FIQ_Handler
                               B                FIQ_Handler
  631 00000054         
  632 00000054         
  633 00000054         ; Reset Handler
  634 00000054         
  635 00000054                 EXPORT           Reset_Handler
  636 00000054         Reset_Handler
  637 00000054         
  638 00000054         
  639 00000054         
  640 00000054         ; Clock Setup ------------------------------------------
                       ------------------------
  641 00000054         
  642 00000054                 IF               (:LNOT:(:DEF:NO_CLOCK_SETUP)):L
AND:(CLOCK_SETUP != 0)
  643 00000054 E59F01C0        LDR              R0, =SCB_BASE
  644 00000058 E3A010AA        MOV              R1, #0xAA
  645 0000005C E3A02055        MOV              R2, #0x55
  646 00000060         
  647 00000060         ;  Configure and Enable PLL
  648 00000060 E3A03020        LDR              R3, =SCS_Val ; Enable main osci
                                                            llator
  649 00000064 E58031A0        STR              R3, [R0, #SCS_OFS]
  650 00000068         
  651 00000068                 IF               (SCS_Val:AND:OSCEN) != 0
  652 00000068 E59031A0 
                       OSC_Loop
                               LDR              R3, [R0, #SCS_OFS] ; Wait for m
                                                            ain osc stabilize
  653 0000006C E2133040        ANDS             R3, R3, #OSCSTAT
  654 00000070 0AFFFFFC        BEQ              OSC_Loop
  655 00000074                 ENDIF
  656 00000074         
  657 00000074 E3A03001        LDR              R3, =CLKSRCSEL_Val ; Select PLL
                                                             source clock
  658 00000078 E580310C        STR              R3, [R0, #CLKSRCSEL_OFS]
  659 0000007C E3A0300B        LDR              R3, =PLLCFG_Val
  660 00000080 E5803084        STR              R3, [R0, #PLLCFG_OFS]
  661 00000084 E580108C        STR              R1, [R0, #PLLFEED_OFS]
  662 00000088 E580208C        STR              R2, [R0, #PLLFEED_OFS]
  663 0000008C E3A03001        MOV              R3, #PLLCON_PLLE
  664 00000090 E5803080        STR              R3, [R0, #PLLCON_OFS]
  665 00000094 E580108C        STR              R1, [R0, #PLLFEED_OFS]
  666 00000098 E580208C        STR              R2, [R0, #PLLFEED_OFS]
  667 0000009C         
  668 0000009C                 IF               (CLKSRCSEL_Val:AND:3) != 2
  669 0000009C         ;  Wait until PLL Locked (if source is not RTC oscillato
                       r)
  670 0000009C E5903088 
                       PLL_Loop
                               LDR              R3, [R0, #PLLSTAT_OFS]
  671 000000A0 E2133301        ANDS             R3, R3, #PLLSTAT_PLOCK
  672 000000A4 0AFFFFFC        BEQ              PLL_Loop
  673 000000A8                 ELSE
  678                          ENDIF
  679 000000A8         



ARM Macro Assembler    Page 20 


  680 000000A8 E5903088 
                       M_N_Lock
                               LDR              R3, [R0, #PLLSTAT_OFS]
  681 000000AC E59F416C        LDR              R4, =(PLLSTAT_M:OR:PLLSTAT_N)
  682 000000B0 E0033004        AND              R3, R3, R4
  683 000000B4 E3A0400B        LDR              R4, =PLLCFG_Val
  684 000000B8 E0333004        EORS             R3, R3, R4
  685 000000BC 1AFFFFF9        BNE              M_N_Lock
  686 000000C0         
  687 000000C0         ;  Setup CPU clock divider
  688 000000C0 E3A03005        MOV              R3, #CCLKCFG_Val
  689 000000C4 E5803104        STR              R3, [R0, #CCLKCFG_OFS]
  690 000000C8         
  691 000000C8         ;  Setup USB clock divider
  692 000000C8 E3A03005        LDR              R3, =USBCLKCFG_Val
  693 000000CC E5803108        STR              R3, [R0, #USBCLKCFG_OFS]
  694 000000D0         
  695 000000D0         ;  Setup Peripheral Clock
  696 000000D0 E59F314C        LDR              R3, =PCLKSEL0_Val
  697 000000D4 E58031A8        STR              R3, [R0, #PCLKSEL0_OFS]
  698 000000D8 E3A03000        LDR              R3, =PCLKSEL1_Val
  699 000000DC E58031AC        STR              R3, [R0, #PCLKSEL1_OFS]
  700 000000E0         
  701 000000E0         ;  Switch to PLL Clock
  702 000000E0 E3A03003        MOV              R3, #(PLLCON_PLLE:OR:PLLCON_PLL
C)
  703 000000E4 E5803080        STR              R3, [R0, #PLLCON_OFS]
  704 000000E8 E580108C        STR              R1, [R0, #PLLFEED_OFS]
  705 000000EC E580208C        STR              R2, [R0, #PLLFEED_OFS]
  706 000000F0         
  707 000000F0 E59F4130        LDR              R4, =PCONP_Val ; Enable Periphe
                                                            ral Clocks
  708 000000F4 E58040C4        STR              R4, [R0, #PCONP_OFS]
  709 000000F8                 ENDIF                        ; CLOCK_SETUP
  710 000000F8         
  711 000000F8         
  712 000000F8         ; Setup Memory Accelerator Module ----------------------
                       ------------------------
  713 000000F8         
  714 000000F8                 IF               MAM_SETUP != 0
  715 000000F8 E59F011C        LDR              R0, =MAM_BASE
  716 000000FC E3A01004        MOV              R1, #MAMTIM_Val
  717 00000100 E5801004        STR              R1, [R0, #MAMTIM_OFS]
  718 00000104 E3A01002        MOV              R1, #MAMCR_Val
  719 00000108 E5801000        STR              R1, [R0, #MAMCR_OFS]
  720 0000010C                 ENDIF                        ; MAM_SETUP
  721 0000010C         
  722 0000010C         
  723 0000010C         ; Setup External Memory Controller ---------------------
                       ------------------------
  724 0000010C         
  725 0000010C                 IF               (:DEF:NO_EMC_SETUP):LOR:(EMC_SE
TUP != 0)
  726 0000010C E59F0118        LDR              R0, =EMC_BASE
  727 00000110 E59F1104        LDR              R1, =SCB_BASE
  728 00000114 E59F2114        LDR              R2, =PCB_BASE
  729 00000118         
  730 00000118 E59140C4        LDR              R4, [R1, #PCONP_OFS]
  731 0000011C E3844B02        ORR              R4, R4, #EMC_PCONP_Const 



ARM Macro Assembler    Page 21 


                                                            ; Enable EMC clock
  732 00000120 E58140C4        STR              R4, [R1, #PCONP_OFS]
  733 00000124         
  734 00000124 E3A04001        LDR              R4, =EMC_CTRL_Val
  735 00000128 E5804000        STR              R4, [R0, #EMC_CTRL_OFS]
  736 0000012C E3A04000        LDR              R4, =EMC_CONFIG_Val
  737 00000130 E5804008        STR              R4, [R0, #EMC_CONFIG_OFS]
  738 00000134         
  739 00000134         ;  Setup pin functions for External Bus functionality
  740 00000134 E59F40F8        LDR              R4, =EMC_PINSEL6_Val
  741 00000138 E5824018        STR              R4, [R2, #PINSEL6_OFS]
  742 0000013C E3A04055        LDR              R4, =EMC_PINSEL8_Val
  743 00000140 E5824020        STR              R4, [R2, #PINSEL8_OFS]
  744 00000144 E59F40EC        LDR              R4, =EMC_PINSEL9_Val
  745 00000148 E5824024        STR              R4, [R2, #PINSEL9_OFS]
  746 0000014C         
  747 0000014C E59F60E8        LDR              R6, =1200000 ; Number of cycles
                                                             to delay
  748 00000150 E2566001 
                       Wait_0  SUBS             R6, R6, #1  ; Delay ~100 ms @ p
                                                            roc clk 48 MHz
  749 00000154 1AFFFFFD        BNE              Wait_0
  750 00000158         
  751 00000158                 IF               (EMC_STACS0_SETUP != 0)
  752 00000158 E3A04C01        LDR              R4, =EMC_STA_CFG0_Val
  753 0000015C E5804200        STR              R4, [R0, #EMC_STA_CFG0_OFS]
  754 00000160 E3A04002        LDR              R4, =EMC_STA_WWEN0_Val
  755 00000164 E5804204        STR              R4, [R0, #EMC_STA_WWEN0_OFS]
  756 00000168 E3A04002        LDR              R4, =EMC_STA_WOEN0_Val
  757 0000016C E5804208        STR              R4, [R0, #EMC_STA_WOEN0_OFS]
  758 00000170 E3A0401F        LDR              R4, =EMC_STA_WRD0_Val
  759 00000174 E580420C        STR              R4, [R0, #EMC_STA_WRD0_OFS]
  760 00000178 E3A0401F        LDR              R4, =EMC_STA_WPAGE0_Val
  761 0000017C E5804210        STR              R4, [R0, #EMC_STA_WPAGE0_OFS]
  762 00000180 E3A0401F        LDR              R4, =EMC_STA_WWR0_Val
  763 00000184 E5804214        STR              R4, [R0, #EMC_STA_WWR0_OFS]
  764 00000188 E3A0400F        LDR              R4, =EMC_STA_WTURN0_Val
  765 0000018C E5804218        STR              R4, [R0, #EMC_STA_WTURN0_OFS]
  766 00000190                 ENDIF
  767 00000190         
  768 00000190                 IF               (EMC_STACS1_SETUP != 0)
  783                          ENDIF
  784 00000190         
  785 00000190 E59F60A8        LDR              R6, =120000 ; Number of cycles 
                                                            to delay
  786 00000194 E2566001 
                       Wait_1  SUBS             R6, R6, #1  ; Delay ~10 ms @ pr
                                                            oc clk 48 MHz
  787 00000198 1AFFFFFD        BNE              Wait_1
  788 0000019C         
  789 0000019C E3A04000        LDR              R4, =EMC_STA_EXT_W_Val
  790 000001A0 E3A05D22        LDR              R5, =EMC_STA_EXT_W_OFS
  791 000001A4 E0855000        ADD              R5, R5, R0
  792 000001A8 E5854000        STR              R4, [R5, #0]
  793 000001AC         
  794 000001AC                 ENDIF                        ; EMC_SETUP
  795 000001AC         
  796 000001AC         
  797 000001AC         ; Copy Exception Vectors to Internal RAM ---------------



ARM Macro Assembler    Page 22 


                       ------------------------
  798 000001AC         
  799 000001AC                 IF               :DEF:RAM_INTVEC
  800 000001AC E24F8F6D        ADR              R8, Vectors ; Source
  801 000001B0 E3A09101        LDR              R9, =RAM_BASE ; Destination
  802 000001B4 E8B800FF        LDMIA            R8!, {R0-R7} ; Load Vectors 
  803 000001B8 E8A900FF        STMIA            R9!, {R0-R7} ; Store Vectors 
  804 000001BC E8B800FF        LDMIA            R8!, {R0-R7} ; Load Handler Add
                                                            resses 
  805 000001C0 E8A900FF        STMIA            R9!, {R0-R7} ; Store Handler Ad
                                                            dresses
  806 000001C4                 ENDIF
  807 000001C4         
  808 000001C4         
  809 000001C4         ; Memory Mapping (when Interrupt Vectors are in RAM) ---
                       ------------------------
  810 000001C4         
  811 000001C4 E01FC040 
                       MEMMAP  EQU              0xE01FC040  ; Memory Mapping Co
                                                            ntrol
  812 000001C4                 IF               :DEF:REMAP
  813 000001C4 E59F0078        LDR              R0, =MEMMAP
  814 000001C8                 IF               :DEF:EXTMEM_MODE
  820                          ENDIF
  821 000001CC E5801000        STR              R1, [R0]
  822 000001D0                 ENDIF
  823 000001D0         
  824 000001D0         
  825 000001D0         ; Setup Stack for each mode ----------------------------
                       ------------------------
  826 000001D0         
  827 000001D0 E59F0070        LDR              R0, =Stack_Top
  828 000001D4         
  829 000001D4         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
  830 000001D4 E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
  831 000001D8 E1A0D000        MOV              SP, R0
  832 000001DC E2400000        SUB              R0, R0, #UND_Stack_Size
  833 000001E0         
  834 000001E0         ;  Enter Abort Mode and set its Stack Pointer
  835 000001E0 E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
  836 000001E4 E1A0D000        MOV              SP, R0
  837 000001E8 E2400000        SUB              R0, R0, #ABT_Stack_Size
  838 000001EC         
  839 000001EC         ;  Enter FIQ Mode and set its Stack Pointer
  840 000001EC E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
  841 000001F0 E1A0D000        MOV              SP, R0
  842 000001F4 E2400000        SUB              R0, R0, #FIQ_Stack_Size
  843 000001F8         
  844 000001F8         ;  Enter IRQ Mode and set its Stack Pointer
  845 000001F8 E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit
  846 000001FC E1A0D000        MOV              SP, R0
  847 00000200 E2400C01        SUB              R0, R0, #IRQ_Stack_Size
  848 00000204         
  849 00000204         ;  Enter Supervisor Mode and set its Stack Pointer



ARM Macro Assembler    Page 23 


  850 00000204 E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
  851 00000208 E1A0D000        MOV              SP, R0
  852 0000020C E2400040        SUB              R0, R0, #SVC_Stack_Size
  853 00000210         
  854 00000210         ;  Enter User Mode and set its Stack Pointer
  855 00000210 E321F010        MSR              CPSR_c, #Mode_USR
  856 00000214                 IF               :DEF:__MICROLIB
  857 00000214         
  858 00000214                 EXPORT           __initial_sp
  859 00000214         
  860 00000214                 ELSE
  865                          ENDIF
  866 00000214         
  867 00000214         
  868 00000214         ; Enter the C code -------------------------------------
                       ------------------------
  869 00000214         
  870 00000214                 IMPORT           __main
  871 00000214 E59F0030        LDR              R0, =__main
  872 00000218 E12FFF10        BX               R0
  873 0000021C         
  874 0000021C         
  875 0000021C                 IF               :DEF:__MICROLIB
  876 0000021C         
  877 0000021C                 EXPORT           __heap_base
  878 0000021C                 EXPORT           __heap_limit
  879 0000021C         
  880 0000021C                 ELSE
  893                          ENDIF
  894 0000021C         
  895 0000021C         
  896 0000021C                 END
              E01FC000 
              00FF7FFF 
              A8114000 
              83C02FDE 
              FFE08000 
              E002C000 
              00005555 
              50090000 
              00124F80 
              0001D4C0 
              E01FC040 
              00000000 
              00000000 
Command Line: --16 --debug --xref --apcs=interwork --depend=.\obj\lpc2300.d -o.
\obj\lpc2300.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM
\Inc\Philips --predefine="__MICROLIB SETA 1" --predefine="RAM_INTVEC SETA 1" --
predefine="REMAP SETA 1" --predefine="RAM_MODE SETA 1" --list=.\lpc2300.lst ..\
src\LPC2300.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 92 in file ..\src\LPC2300.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 94 in file ..\src\LPC2300.s
   Uses
      None
Comment: Stack_Mem unused
Stack_Top 00000540

Symbol: Stack_Top
   Definitions
      At line 97 in file ..\src\LPC2300.s
   Uses
      At line 827 in file ..\src\LPC2300.s
Comment: Stack_Top used once
__initial_sp 00000400

Symbol: __initial_sp
   Definitions
      At line 95 in file ..\src\LPC2300.s
   Uses
      At line 858 in file ..\src\LPC2300.s
Comment: __initial_sp used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 106 in file ..\src\LPC2300.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 108 in file ..\src\LPC2300.s
   Uses
      None
Comment: Heap_Mem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 107 in file ..\src\LPC2300.s
   Uses
      At line 877 in file ..\src\LPC2300.s
Comment: __heap_base used once
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 109 in file ..\src\LPC2300.s
   Uses
      At line 878 in file ..\src\LPC2300.s
Comment: __heap_limit used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 618 in file ..\src\LPC2300.s
   Uses
      At line 608 in file ..\src\LPC2300.s
Comment: DAbt_Addr used once
DAbt_Handler 00000048

Symbol: DAbt_Handler
   Definitions
      At line 628 in file ..\src\LPC2300.s
   Uses
      At line 618 in file ..\src\LPC2300.s
      At line 628 in file ..\src\LPC2300.s

FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 621 in file ..\src\LPC2300.s
   Uses
      At line 612 in file ..\src\LPC2300.s
Comment: FIQ_Addr used once
FIQ_Handler 00000050

Symbol: FIQ_Handler
   Definitions
      At line 630 in file ..\src\LPC2300.s
   Uses
      At line 621 in file ..\src\LPC2300.s
      At line 630 in file ..\src\LPC2300.s

IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 620 in file ..\src\LPC2300.s
   Uses
      None
Comment: IRQ_Addr unused
IRQ_Handler 0000004C

Symbol: IRQ_Handler
   Definitions
      At line 629 in file ..\src\LPC2300.s
   Uses
      At line 620 in file ..\src\LPC2300.s
      At line 629 in file ..\src\LPC2300.s

M_N_Lock 000000A8

Symbol: M_N_Lock
   Definitions
      At line 680 in file ..\src\LPC2300.s
   Uses
      At line 685 in file ..\src\LPC2300.s
Comment: M_N_Lock used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

OSC_Loop 00000068

Symbol: OSC_Loop
   Definitions
      At line 652 in file ..\src\LPC2300.s
   Uses
      At line 654 in file ..\src\LPC2300.s
Comment: OSC_Loop used once
PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 617 in file ..\src\LPC2300.s
   Uses
      At line 607 in file ..\src\LPC2300.s
Comment: PAbt_Addr used once
PAbt_Handler 00000044

Symbol: PAbt_Handler
   Definitions
      At line 627 in file ..\src\LPC2300.s
   Uses
      At line 617 in file ..\src\LPC2300.s
      At line 627 in file ..\src\LPC2300.s

PLL_Loop 0000009C

Symbol: PLL_Loop
   Definitions
      At line 670 in file ..\src\LPC2300.s
   Uses
      At line 672 in file ..\src\LPC2300.s
Comment: PLL_Loop used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 595 in file ..\src\LPC2300.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 614 in file ..\src\LPC2300.s
   Uses
      At line 604 in file ..\src\LPC2300.s
Comment: Reset_Addr used once
Reset_Handler 00000054

Symbol: Reset_Handler
   Definitions
      At line 636 in file ..\src\LPC2300.s
   Uses
      At line 614 in file ..\src\LPC2300.s
      At line 635 in file ..\src\LPC2300.s

SWI_Addr 00000028



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: SWI_Addr
   Definitions
      At line 616 in file ..\src\LPC2300.s
   Uses
      At line 606 in file ..\src\LPC2300.s
Comment: SWI_Addr used once
Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 615 in file ..\src\LPC2300.s
   Uses
      At line 605 in file ..\src\LPC2300.s
Comment: Undef_Addr used once
Undef_Handler 00000040

Symbol: Undef_Handler
   Definitions
      At line 625 in file ..\src\LPC2300.s
   Uses
      At line 615 in file ..\src\LPC2300.s
      At line 625 in file ..\src\LPC2300.s

Vectors 00000000

Symbol: Vectors
   Definitions
      At line 604 in file ..\src\LPC2300.s
   Uses
      At line 800 in file ..\src\LPC2300.s
Comment: Vectors used once
Wait_0 00000150

Symbol: Wait_0
   Definitions
      At line 748 in file ..\src\LPC2300.s
   Uses
      At line 749 in file ..\src\LPC2300.s
Comment: Wait_0 used once
Wait_1 00000194

Symbol: Wait_1
   Definitions
      At line 786 in file ..\src\LPC2300.s
   Uses
      At line 787 in file ..\src\LPC2300.s
Comment: Wait_1 used once
20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000000

Symbol: ABT_Stack_Size
   Definitions
      At line 84 in file ..\src\LPC2300.s
   Uses
      At line 90 in file ..\src\LPC2300.s
      At line 837 in file ..\src\LPC2300.s

BUFEN_Const 00080000

Symbol: BUFEN_Const
   Definitions
      At line 424 in file ..\src\LPC2300.s
   Uses
      None
Comment: BUFEN_Const unused
CCLKCFG_OFS 00000104

Symbol: CCLKCFG_OFS
   Definitions
      At line 119 in file ..\src\LPC2300.s
   Uses
      At line 689 in file ..\src\LPC2300.s
Comment: CCLKCFG_OFS used once
CCLKCFG_Val 00000005

Symbol: CCLKCFG_Val
   Definitions
      At line 357 in file ..\src\LPC2300.s
   Uses
      At line 688 in file ..\src\LPC2300.s
Comment: CCLKCFG_Val used once
CLKSRCSEL_OFS 0000010C

Symbol: CLKSRCSEL_OFS
   Definitions
      At line 121 in file ..\src\LPC2300.s
   Uses
      At line 658 in file ..\src\LPC2300.s
Comment: CLKSRCSEL_OFS used once
CLKSRCSEL_Val 00000001

Symbol: CLKSRCSEL_Val
   Definitions
      At line 355 in file ..\src\LPC2300.s
   Uses
      At line 657 in file ..\src\LPC2300.s
      At line 668 in file ..\src\LPC2300.s

CLOCK_SETUP 00000001

Symbol: CLOCK_SETUP
   Definitions
      At line 353 in file ..\src\LPC2300.s
   Uses
      At line 642 in file ..\src\LPC2300.s
Comment: CLOCK_SETUP used once
EMC_BASE FFE08000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: EMC_BASE
   Definitions
      At line 403 in file ..\src\LPC2300.s
   Uses
      At line 726 in file ..\src\LPC2300.s
Comment: EMC_BASE used once
EMC_CONFIG_OFS 00000008

Symbol: EMC_CONFIG_OFS
   Definitions
      At line 407 in file ..\src\LPC2300.s
   Uses
      At line 737 in file ..\src\LPC2300.s
Comment: EMC_CONFIG_OFS used once
EMC_CONFIG_Val 00000000

Symbol: EMC_CONFIG_Val
   Definitions
      At line 450 in file ..\src\LPC2300.s
   Uses
      At line 736 in file ..\src\LPC2300.s
Comment: EMC_CONFIG_Val used once
EMC_CTRL_OFS 00000000

Symbol: EMC_CTRL_OFS
   Definitions
      At line 405 in file ..\src\LPC2300.s
   Uses
      At line 735 in file ..\src\LPC2300.s
Comment: EMC_CTRL_OFS used once
EMC_CTRL_Val 00000001

Symbol: EMC_CTRL_Val
   Definitions
      At line 443 in file ..\src\LPC2300.s
   Uses
      At line 734 in file ..\src\LPC2300.s
Comment: EMC_CTRL_Val used once
EMC_PCONP_Const 00000800

Symbol: EMC_PCONP_Const
   Definitions
      At line 425 in file ..\src\LPC2300.s
   Uses
      At line 731 in file ..\src\LPC2300.s
Comment: EMC_PCONP_Const used once
EMC_PINSEL6_Val 00005555

Symbol: EMC_PINSEL6_Val
   Definitions
      At line 429 in file ..\src\LPC2300.s
   Uses
      At line 740 in file ..\src\LPC2300.s
Comment: EMC_PINSEL6_Val used once
EMC_PINSEL8_Val 00000055

Symbol: EMC_PINSEL8_Val
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 430 in file ..\src\LPC2300.s
   Uses
      At line 742 in file ..\src\LPC2300.s
Comment: EMC_PINSEL8_Val used once
EMC_PINSEL9_Val 50090000

Symbol: EMC_PINSEL9_Val
   Definitions
      At line 431 in file ..\src\LPC2300.s
   Uses
      At line 744 in file ..\src\LPC2300.s
Comment: EMC_PINSEL9_Val used once
EMC_SETUP 00000001

Symbol: EMC_SETUP
   Definitions
      At line 435 in file ..\src\LPC2300.s
   Uses
      At line 725 in file ..\src\LPC2300.s
Comment: EMC_SETUP used once
EMC_STACS0_SETUP 00000001

Symbol: EMC_STACS0_SETUP
   Definitions
      At line 454 in file ..\src\LPC2300.s
   Uses
      At line 751 in file ..\src\LPC2300.s
Comment: EMC_STACS0_SETUP used once
EMC_STACS1_SETUP 00000000

Symbol: EMC_STACS1_SETUP
   Definitions
      At line 518 in file ..\src\LPC2300.s
   Uses
      At line 768 in file ..\src\LPC2300.s
Comment: EMC_STACS1_SETUP used once
EMC_STAT_OFS 00000004

Symbol: EMC_STAT_OFS
   Definitions
      At line 406 in file ..\src\LPC2300.s
   Uses
      None
Comment: EMC_STAT_OFS unused
EMC_STA_CFG0_OFS 00000200

Symbol: EMC_STA_CFG0_OFS
   Definitions
      At line 408 in file ..\src\LPC2300.s
   Uses
      At line 753 in file ..\src\LPC2300.s
Comment: EMC_STA_CFG0_OFS used once
EMC_STA_CFG0_Val 00000100

Symbol: EMC_STA_CFG0_Val
   Definitions
      At line 470 in file ..\src\LPC2300.s
   Uses
      At line 752 in file ..\src\LPC2300.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Comment: EMC_STA_CFG0_Val used once
EMC_STA_CFG1_OFS 00000220

Symbol: EMC_STA_CFG1_OFS
   Definitions
      At line 415 in file ..\src\LPC2300.s
   Uses
      None
Comment: EMC_STA_CFG1_OFS unused
EMC_STA_CFG1_Val 00000000

Symbol: EMC_STA_CFG1_Val
   Definitions
      At line 534 in file ..\src\LPC2300.s
   Uses
      None
Comment: EMC_STA_CFG1_Val unused
EMC_STA_EXT_W_OFS 00000880

Symbol: EMC_STA_EXT_W_OFS
   Definitions
      At line 422 in file ..\src\LPC2300.s
   Uses
      At line 790 in file ..\src\LPC2300.s
Comment: EMC_STA_EXT_W_OFS used once
EMC_STA_EXT_W_Val 00000000

Symbol: EMC_STA_EXT_W_Val
   Definitions
      At line 585 in file ..\src\LPC2300.s
   Uses
      At line 789 in file ..\src\LPC2300.s
Comment: EMC_STA_EXT_W_Val used once
EMC_STA_WOEN0_OFS 00000208

Symbol: EMC_STA_WOEN0_OFS
   Definitions
      At line 410 in file ..\src\LPC2300.s
   Uses
      At line 757 in file ..\src\LPC2300.s
Comment: EMC_STA_WOEN0_OFS used once
EMC_STA_WOEN0_Val 00000002

Symbol: EMC_STA_WOEN0_Val
   Definitions
      At line 484 in file ..\src\LPC2300.s
   Uses
      At line 756 in file ..\src\LPC2300.s
Comment: EMC_STA_WOEN0_Val used once
EMC_STA_WOEN1_OFS 00000228

Symbol: EMC_STA_WOEN1_OFS
   Definitions
      At line 417 in file ..\src\LPC2300.s
   Uses
      None
Comment: EMC_STA_WOEN1_OFS unused
EMC_STA_WOEN1_Val 00000000




ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

Symbol: EMC_STA_WOEN1_Val
   Definitions
      At line 548 in file ..\src\LPC2300.s
   Uses
      None
Comment: EMC_STA_WOEN1_Val unused
EMC_STA_WPAGE0_OFS 00000210

Symbol: EMC_STA_WPAGE0_OFS
   Definitions
      At line 412 in file ..\src\LPC2300.s
   Uses
      At line 761 in file ..\src\LPC2300.s
Comment: EMC_STA_WPAGE0_OFS used once
EMC_STA_WPAGE0_Val 0000001F

Symbol: EMC_STA_WPAGE0_Val
   Definitions
      At line 498 in file ..\src\LPC2300.s
   Uses
      At line 760 in file ..\src\LPC2300.s
Comment: EMC_STA_WPAGE0_Val used once
EMC_STA_WPAGE1_OFS 00000230

Symbol: EMC_STA_WPAGE1_OFS
   Definitions
      At line 419 in file ..\src\LPC2300.s
   Uses
      None
Comment: EMC_STA_WPAGE1_OFS unused
EMC_STA_WPAGE1_Val 0000001F

Symbol: EMC_STA_WPAGE1_Val
   Definitions
      At line 562 in file ..\src\LPC2300.s
   Uses
      None
Comment: EMC_STA_WPAGE1_Val unused
EMC_STA_WRD0_OFS 0000020C

Symbol: EMC_STA_WRD0_OFS
   Definitions
      At line 411 in file ..\src\LPC2300.s
   Uses
      At line 759 in file ..\src\LPC2300.s
Comment: EMC_STA_WRD0_OFS used once
EMC_STA_WRD0_Val 0000001F

Symbol: EMC_STA_WRD0_Val
   Definitions
      At line 491 in file ..\src\LPC2300.s
   Uses
      At line 758 in file ..\src\LPC2300.s
Comment: EMC_STA_WRD0_Val used once
EMC_STA_WRD1_OFS 0000022C

Symbol: EMC_STA_WRD1_OFS
   Definitions
      At line 418 in file ..\src\LPC2300.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: EMC_STA_WRD1_OFS unused
EMC_STA_WRD1_Val 0000001F

Symbol: EMC_STA_WRD1_Val
   Definitions
      At line 555 in file ..\src\LPC2300.s
   Uses
      None
Comment: EMC_STA_WRD1_Val unused
EMC_STA_WTURN0_OFS 00000218

Symbol: EMC_STA_WTURN0_OFS
   Definitions
      At line 414 in file ..\src\LPC2300.s
   Uses
      At line 765 in file ..\src\LPC2300.s
Comment: EMC_STA_WTURN0_OFS used once
EMC_STA_WTURN0_Val 0000000F

Symbol: EMC_STA_WTURN0_Val
   Definitions
      At line 512 in file ..\src\LPC2300.s
   Uses
      At line 764 in file ..\src\LPC2300.s
Comment: EMC_STA_WTURN0_Val used once
EMC_STA_WTURN1_OFS 00000238

Symbol: EMC_STA_WTURN1_OFS
   Definitions
      At line 421 in file ..\src\LPC2300.s
   Uses
      None
Comment: EMC_STA_WTURN1_OFS unused
EMC_STA_WTURN1_Val 0000000F

Symbol: EMC_STA_WTURN1_Val
   Definitions
      At line 576 in file ..\src\LPC2300.s
   Uses
      None
Comment: EMC_STA_WTURN1_Val unused
EMC_STA_WWEN0_OFS 00000204

Symbol: EMC_STA_WWEN0_OFS
   Definitions
      At line 409 in file ..\src\LPC2300.s
   Uses
      At line 755 in file ..\src\LPC2300.s
Comment: EMC_STA_WWEN0_OFS used once
EMC_STA_WWEN0_Val 00000002

Symbol: EMC_STA_WWEN0_Val
   Definitions
      At line 477 in file ..\src\LPC2300.s
   Uses
      At line 754 in file ..\src\LPC2300.s
Comment: EMC_STA_WWEN0_Val used once



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

EMC_STA_WWEN1_OFS 00000224

Symbol: EMC_STA_WWEN1_OFS
   Definitions
      At line 416 in file ..\src\LPC2300.s
   Uses
      None
Comment: EMC_STA_WWEN1_OFS unused
EMC_STA_WWEN1_Val 00000000

Symbol: EMC_STA_WWEN1_Val
   Definitions
      At line 541 in file ..\src\LPC2300.s
   Uses
      None
Comment: EMC_STA_WWEN1_Val unused
EMC_STA_WWR0_OFS 00000214

Symbol: EMC_STA_WWR0_OFS
   Definitions
      At line 413 in file ..\src\LPC2300.s
   Uses
      At line 763 in file ..\src\LPC2300.s
Comment: EMC_STA_WWR0_OFS used once
EMC_STA_WWR0_Val 0000001F

Symbol: EMC_STA_WWR0_Val
   Definitions
      At line 505 in file ..\src\LPC2300.s
   Uses
      At line 762 in file ..\src\LPC2300.s
Comment: EMC_STA_WWR0_Val used once
EMC_STA_WWR1_OFS 00000234

Symbol: EMC_STA_WWR1_OFS
   Definitions
      At line 420 in file ..\src\LPC2300.s
   Uses
      None
Comment: EMC_STA_WWR1_OFS unused
EMC_STA_WWR1_Val 0000001F

Symbol: EMC_STA_WWR1_Val
   Definitions
      At line 569 in file ..\src\LPC2300.s
   Uses
      None
Comment: EMC_STA_WWR1_Val unused
EXTMEM_BASE 80000000

Symbol: EXTMEM_BASE
   Definitions
      At line 64 in file ..\src\LPC2300.s
   Uses
      None
Comment: EXTMEM_BASE unused
FIQ_Stack_Size 00000000

Symbol: FIQ_Stack_Size



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 85 in file ..\src\LPC2300.s
   Uses
      At line 90 in file ..\src\LPC2300.s
      At line 842 in file ..\src\LPC2300.s

FLASH_BASE 00000000

Symbol: FLASH_BASE
   Definitions
      At line 62 in file ..\src\LPC2300.s
   Uses
      None
Comment: FLASH_BASE unused
F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 56 in file ..\src\LPC2300.s
   Uses
      At line 830 in file ..\src\LPC2300.s
      At line 835 in file ..\src\LPC2300.s
      At line 840 in file ..\src\LPC2300.s
      At line 845 in file ..\src\LPC2300.s
      At line 850 in file ..\src\LPC2300.s

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 104 in file ..\src\LPC2300.s
   Uses
      At line 108 in file ..\src\LPC2300.s
Comment: Heap_Size used once
IRQ_Stack_Size 00000100

Symbol: IRQ_Stack_Size
   Definitions
      At line 86 in file ..\src\LPC2300.s
   Uses
      At line 90 in file ..\src\LPC2300.s
      At line 847 in file ..\src\LPC2300.s

ISR_Stack_Size 00000140

Symbol: ISR_Stack_Size
   Definitions
      At line 90 in file ..\src\LPC2300.s
   Uses
      At line 95 in file ..\src\LPC2300.s
Comment: ISR_Stack_Size used once
I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 55 in file ..\src\LPC2300.s
   Uses
      At line 830 in file ..\src\LPC2300.s
      At line 835 in file ..\src\LPC2300.s



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

      At line 840 in file ..\src\LPC2300.s
      At line 845 in file ..\src\LPC2300.s
      At line 850 in file ..\src\LPC2300.s

MAMCR_OFS 00000000

Symbol: MAMCR_OFS
   Definitions
      At line 366 in file ..\src\LPC2300.s
   Uses
      At line 719 in file ..\src\LPC2300.s
Comment: MAMCR_OFS used once
MAMCR_Val 00000002

Symbol: MAMCR_Val
   Definitions
      At line 381 in file ..\src\LPC2300.s
   Uses
      At line 718 in file ..\src\LPC2300.s
Comment: MAMCR_Val used once
MAMTIM_OFS 00000004

Symbol: MAMTIM_OFS
   Definitions
      At line 367 in file ..\src\LPC2300.s
   Uses
      At line 717 in file ..\src\LPC2300.s
Comment: MAMTIM_OFS used once
MAMTIM_Val 00000004

Symbol: MAMTIM_Val
   Definitions
      At line 382 in file ..\src\LPC2300.s
   Uses
      At line 716 in file ..\src\LPC2300.s
Comment: MAMTIM_Val used once
MAM_BASE E01FC000

Symbol: MAM_BASE
   Definitions
      At line 365 in file ..\src\LPC2300.s
   Uses
      At line 715 in file ..\src\LPC2300.s
Comment: MAM_BASE used once
MAM_SETUP 00000001

Symbol: MAM_SETUP
   Definitions
      At line 380 in file ..\src\LPC2300.s
   Uses
      At line 714 in file ..\src\LPC2300.s
Comment: MAM_SETUP used once
MEMMAP E01FC040

Symbol: MEMMAP
   Definitions
      At line 811 in file ..\src\LPC2300.s
   Uses
      At line 813 in file ..\src\LPC2300.s



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Absolute symbols

Comment: MEMMAP used once
Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 51 in file ..\src\LPC2300.s
   Uses
      At line 835 in file ..\src\LPC2300.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 48 in file ..\src\LPC2300.s
   Uses
      At line 840 in file ..\src\LPC2300.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 49 in file ..\src\LPC2300.s
   Uses
      At line 845 in file ..\src\LPC2300.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 50 in file ..\src\LPC2300.s
   Uses
      At line 850 in file ..\src\LPC2300.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 53 in file ..\src\LPC2300.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 52 in file ..\src\LPC2300.s
   Uses
      At line 830 in file ..\src\LPC2300.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 47 in file ..\src\LPC2300.s
   Uses
      At line 855 in file ..\src\LPC2300.s
Comment: Mode_USR used once
OSCEN 00000020




ARM Macro Assembler    Page 11 Alphabetic symbol ordering
Absolute symbols

Symbol: OSCEN
   Definitions
      At line 131 in file ..\src\LPC2300.s
   Uses
      At line 651 in file ..\src\LPC2300.s
Comment: OSCEN used once
OSCRANGE 00000010

Symbol: OSCRANGE
   Definitions
      At line 130 in file ..\src\LPC2300.s
   Uses
      None
Comment: OSCRANGE unused
OSCSTAT 00000040

Symbol: OSCSTAT
   Definitions
      At line 132 in file ..\src\LPC2300.s
   Uses
      At line 653 in file ..\src\LPC2300.s
Comment: OSCSTAT used once
PCB_BASE E002C000

Symbol: PCB_BASE
   Definitions
      At line 387 in file ..\src\LPC2300.s
   Uses
      At line 728 in file ..\src\LPC2300.s
Comment: PCB_BASE used once
PCLKSEL0_OFS 000001A8

Symbol: PCLKSEL0_OFS
   Definitions
      At line 123 in file ..\src\LPC2300.s
   Uses
      At line 697 in file ..\src\LPC2300.s
Comment: PCLKSEL0_OFS used once
PCLKSEL0_Val A8114000

Symbol: PCLKSEL0_Val
   Definitions
      At line 359 in file ..\src\LPC2300.s
   Uses
      At line 696 in file ..\src\LPC2300.s
Comment: PCLKSEL0_Val used once
PCLKSEL1_OFS 000001AC

Symbol: PCLKSEL1_OFS
   Definitions
      At line 124 in file ..\src\LPC2300.s
   Uses
      At line 699 in file ..\src\LPC2300.s
Comment: PCLKSEL1_OFS used once
PCLKSEL1_Val 00000000

Symbol: PCLKSEL1_Val
   Definitions
      At line 360 in file ..\src\LPC2300.s



ARM Macro Assembler    Page 12 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 698 in file ..\src\LPC2300.s
Comment: PCLKSEL1_Val used once
PCONP_OFS 000000C4

Symbol: PCONP_OFS
   Definitions
      At line 127 in file ..\src\LPC2300.s
   Uses
      At line 708 in file ..\src\LPC2300.s
      At line 730 in file ..\src\LPC2300.s
      At line 732 in file ..\src\LPC2300.s

PCONP_Val 83C02FDE

Symbol: PCONP_Val
   Definitions
      At line 361 in file ..\src\LPC2300.s
   Uses
      At line 707 in file ..\src\LPC2300.s
Comment: PCONP_Val used once
PCON_OFS 000000C0

Symbol: PCON_OFS
   Definitions
      At line 126 in file ..\src\LPC2300.s
   Uses
      None
Comment: PCON_OFS unused
PINSEL0_OFS 00000000

Symbol: PINSEL0_OFS
   Definitions
      At line 388 in file ..\src\LPC2300.s
   Uses
      None
Comment: PINSEL0_OFS unused
PINSEL10_OFS 00000028

Symbol: PINSEL10_OFS
   Definitions
      At line 398 in file ..\src\LPC2300.s
   Uses
      None
Comment: PINSEL10_OFS unused
PINSEL1_OFS 00000004

Symbol: PINSEL1_OFS
   Definitions
      At line 389 in file ..\src\LPC2300.s
   Uses
      None
Comment: PINSEL1_OFS unused
PINSEL2_OFS 00000008

Symbol: PINSEL2_OFS
   Definitions
      At line 390 in file ..\src\LPC2300.s
   Uses



ARM Macro Assembler    Page 13 Alphabetic symbol ordering
Absolute symbols

      None
Comment: PINSEL2_OFS unused
PINSEL3_OFS 0000000C

Symbol: PINSEL3_OFS
   Definitions
      At line 391 in file ..\src\LPC2300.s
   Uses
      None
Comment: PINSEL3_OFS unused
PINSEL4_OFS 00000010

Symbol: PINSEL4_OFS
   Definitions
      At line 392 in file ..\src\LPC2300.s
   Uses
      None
Comment: PINSEL4_OFS unused
PINSEL5_OFS 00000014

Symbol: PINSEL5_OFS
   Definitions
      At line 393 in file ..\src\LPC2300.s
   Uses
      None
Comment: PINSEL5_OFS unused
PINSEL6_OFS 00000018

Symbol: PINSEL6_OFS
   Definitions
      At line 394 in file ..\src\LPC2300.s
   Uses
      At line 741 in file ..\src\LPC2300.s
Comment: PINSEL6_OFS used once
PINSEL7_OFS 0000001C

Symbol: PINSEL7_OFS
   Definitions
      At line 395 in file ..\src\LPC2300.s
   Uses
      None
Comment: PINSEL7_OFS unused
PINSEL8_OFS 00000020

Symbol: PINSEL8_OFS
   Definitions
      At line 396 in file ..\src\LPC2300.s
   Uses
      At line 743 in file ..\src\LPC2300.s
Comment: PINSEL8_OFS used once
PINSEL9_OFS 00000024

Symbol: PINSEL9_OFS
   Definitions
      At line 397 in file ..\src\LPC2300.s
   Uses
      At line 745 in file ..\src\LPC2300.s
Comment: PINSEL9_OFS used once
PLLCFG_OFS 00000084



ARM Macro Assembler    Page 14 Alphabetic symbol ordering
Absolute symbols


Symbol: PLLCFG_OFS
   Definitions
      At line 116 in file ..\src\LPC2300.s
   Uses
      At line 660 in file ..\src\LPC2300.s
Comment: PLLCFG_OFS used once
PLLCFG_Val 0000000B

Symbol: PLLCFG_Val
   Definitions
      At line 356 in file ..\src\LPC2300.s
   Uses
      At line 659 in file ..\src\LPC2300.s
      At line 683 in file ..\src\LPC2300.s

PLLCON_OFS 00000080

Symbol: PLLCON_OFS
   Definitions
      At line 115 in file ..\src\LPC2300.s
   Uses
      At line 664 in file ..\src\LPC2300.s
      At line 703 in file ..\src\LPC2300.s

PLLCON_PLLC 00000002

Symbol: PLLCON_PLLC
   Definitions
      At line 134 in file ..\src\LPC2300.s
   Uses
      At line 702 in file ..\src\LPC2300.s
Comment: PLLCON_PLLC used once
PLLCON_PLLE 00000001

Symbol: PLLCON_PLLE
   Definitions
      At line 133 in file ..\src\LPC2300.s
   Uses
      At line 663 in file ..\src\LPC2300.s
      At line 702 in file ..\src\LPC2300.s

PLLFEED_OFS 0000008C

Symbol: PLLFEED_OFS
   Definitions
      At line 118 in file ..\src\LPC2300.s
   Uses
      At line 661 in file ..\src\LPC2300.s
      At line 662 in file ..\src\LPC2300.s
      At line 665 in file ..\src\LPC2300.s
      At line 666 in file ..\src\LPC2300.s
      At line 704 in file ..\src\LPC2300.s
      At line 705 in file ..\src\LPC2300.s

PLLSTAT_M 00007FFF

Symbol: PLLSTAT_M
   Definitions



ARM Macro Assembler    Page 15 Alphabetic symbol ordering
Absolute symbols

      At line 135 in file ..\src\LPC2300.s
   Uses
      At line 681 in file ..\src\LPC2300.s
Comment: PLLSTAT_M used once
PLLSTAT_N 00FF0000

Symbol: PLLSTAT_N
   Definitions
      At line 136 in file ..\src\LPC2300.s
   Uses
      At line 681 in file ..\src\LPC2300.s
Comment: PLLSTAT_N used once
PLLSTAT_OFS 00000088

Symbol: PLLSTAT_OFS
   Definitions
      At line 117 in file ..\src\LPC2300.s
   Uses
      At line 670 in file ..\src\LPC2300.s
      At line 680 in file ..\src\LPC2300.s

PLLSTAT_PLOCK 04000000

Symbol: PLLSTAT_PLOCK
   Definitions
      At line 137 in file ..\src\LPC2300.s
   Uses
      At line 671 in file ..\src\LPC2300.s
Comment: PLLSTAT_PLOCK used once
RAM_BASE 40000000

Symbol: RAM_BASE
   Definitions
      At line 63 in file ..\src\LPC2300.s
   Uses
      At line 801 in file ..\src\LPC2300.s
Comment: RAM_BASE used once
SCB_BASE E01FC000

Symbol: SCB_BASE
   Definitions
      At line 114 in file ..\src\LPC2300.s
   Uses
      At line 643 in file ..\src\LPC2300.s
      At line 727 in file ..\src\LPC2300.s

SCS_OFS 000001A0

Symbol: SCS_OFS
   Definitions
      At line 122 in file ..\src\LPC2300.s
   Uses
      At line 649 in file ..\src\LPC2300.s
      At line 652 in file ..\src\LPC2300.s

SCS_Val 00000020

Symbol: SCS_Val
   Definitions



ARM Macro Assembler    Page 16 Alphabetic symbol ordering
Absolute symbols

      At line 354 in file ..\src\LPC2300.s
   Uses
      At line 648 in file ..\src\LPC2300.s
      At line 651 in file ..\src\LPC2300.s

STA_MEM0_BASE 80000000

Symbol: STA_MEM0_BASE
   Definitions
      At line 67 in file ..\src\LPC2300.s
   Uses
      None
Comment: STA_MEM0_BASE unused
STA_MEM1_BASE 81000000

Symbol: STA_MEM1_BASE
   Definitions
      At line 68 in file ..\src\LPC2300.s
   Uses
      None
Comment: STA_MEM1_BASE unused
SVC_Stack_Size 00000040

Symbol: SVC_Stack_Size
   Definitions
      At line 83 in file ..\src\LPC2300.s
   Uses
      At line 90 in file ..\src\LPC2300.s
      At line 852 in file ..\src\LPC2300.s

UND_Stack_Size 00000000

Symbol: UND_Stack_Size
   Definitions
      At line 82 in file ..\src\LPC2300.s
   Uses
      At line 90 in file ..\src\LPC2300.s
      At line 832 in file ..\src\LPC2300.s

USBCLKCFG_OFS 00000108

Symbol: USBCLKCFG_OFS
   Definitions
      At line 120 in file ..\src\LPC2300.s
   Uses
      At line 693 in file ..\src\LPC2300.s
Comment: USBCLKCFG_OFS used once
USBCLKCFG_Val 00000005

Symbol: USBCLKCFG_Val
   Definitions
      At line 358 in file ..\src\LPC2300.s
   Uses
      At line 692 in file ..\src\LPC2300.s
Comment: USBCLKCFG_Val used once
USR_Stack_Size 00000400

Symbol: USR_Stack_Size
   Definitions



ARM Macro Assembler    Page 17 Alphabetic symbol ordering
Absolute symbols

      At line 87 in file ..\src\LPC2300.s
   Uses
      At line 94 in file ..\src\LPC2300.s
Comment: USR_Stack_Size used once
115 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SWI_Handler 00000000

Symbol: SWI_Handler
   Definitions
      At line 623 in file ..\src\LPC2300.s
   Uses
      At line 616 in file ..\src\LPC2300.s
Comment: SWI_Handler used once
__main 00000000

Symbol: __main
   Definitions
      At line 870 in file ..\src\LPC2300.s
   Uses
      At line 871 in file ..\src\LPC2300.s
Comment: __main used once
2 symbols
487 symbols in table
