IF( WIN32 )
	SET( ARCH win )
ELSE( WIN32 )
	SET( ARCH linux )
ENDIF( WIN32 )

IF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
#IF( CMAKE_CL_64 )
  SET( ARCH ${ARCH}64 )
#ELSE( CMAKE_CL_64 )
ELSE( CMAKE_SIZEOF_VOID_P EQUAL 8 )
  SET( ARCH ${ARCH}32 )
#ENDIF( CMAKE_CL_64 )
ENDIF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
  
IF( WIN32 )
	#check for Visual Studio 2010
	IF( MSVC10 )
		SET( ARCH ${ARCH}_vc100 )
		#check for Visual Studio 2010
	ELSEIF( MSVC12 )
		SET( ARCH ${ARCH}_vc120 )
	ELSE( MSVC10 )
		MESSAGE( FATAL_ERROR "unknown VS compiler version." )
	ENDIF( MSVC10 )
ENDIF( WIN32 )

SET( QT_STATIC 1 )
ADD_DEFINITIONS( -DQT_STATIC )

SET( QT_STATIC_VERSION_MAJOR 4 )
SET( QT_STATIC_VERSION_MINOR 7 )
SET( QT_STATIC_VERSION_PATCH 1 )

SET( QT_STATIC_PATH "${EXTERNAL_DIR}/qt_4_7_4_static_robotino_api2_qt" )

IF( WIN32 )
	SET( QT_STATIC_MKSPECS_DIR ${QT_STATIC_PATH}/mkspecs/win32-msvc2005 )
ELSE( WIN32 )
	SET( QT_STATIC_MKSPECS_DIR ${QT_STATIC_PATH}/mkspecs/linux-g++ )
ENDIF( WIN32 )

SET( QT_STATIC_INCLUDE_PATH "${QT_STATIC_PATH}/include" )

FIND_PATH(
   QT_STATIC_ROBOTINO_API2_QT_QT_INCLUDE_DIR 
   NAMES
   Qt/qstring.h
   PATHS
   ${QT_STATIC_INCLUDE_PATH}
   NO_DEFAULT_PATH
)

IF( IS_DIRECTORY "${QT_STATIC_ROBOTINO_API2_QT_QT_INCLUDE_DIR}" )
	SET( QT4_STATIC_FOUND 1 )
ENDIF( IS_DIRECTORY "${QT_STATIC_ROBOTINO_API2_QT_QT_INCLUDE_DIR}" )

# Set QT_QTCORE_INCLUDE_DIR
FIND_PATH(QT_STATIC_ROBOTINO_API2_QT_QTCORE_INCLUDE_DIR QtCore
  PATHS
  ${QT_STATIC_ROBOTINO_API2_QT_QT_INCLUDE_DIR}/QtCore
  NO_DEFAULT_PATH
)

# Set QT_QTNETWORK_INCLUDE_DIR
FIND_PATH(QT_STATIC_ROBOTINO_API2_QT_QTNETWORK_INCLUDE_DIR QtNetwork
  PATHS
  ${QT_STATIC_ROBOTINO_API2_QT_QT_INCLUDE_DIR}/QtNetwork
  NO_DEFAULT_PATH
)

# Set QT_QTXML_INCLUDE_DIR
FIND_PATH(QT_STATIC_ROBOTINO_API2_QT_QTXML_INCLUDE_DIR QtXml
  PATHS
  ${QT_STATIC_ROBOTINO_API2_QT_QT_INCLUDE_DIR}/QtXml
  NO_DEFAULT_PATH
)

# Set QT_QTGUI_INCLUDE_DIR
#FIND_PATH(QT_STATIC_ROBOTINO_API2_QT_QTGUI_INCLUDE_DIR QtGui
#  PATHS
#  ${QT_STATIC_ROBOTINO_API2_QT_QT_INCLUDE_DIR}/QtGui
#  NO_DEFAULT_PATH
#)

# Set QT_QTSVG_INCLUDE_DIR
#FIND_PATH(QT_STATIC_ROBOTINO_API2_QT_QTSVG_INCLUDE_DIR QtSvg
#  PATHS
#  ${QT_STATIC_ROBOTINO_API2_QT_QT_INCLUDE_DIR}/QtSvg
#  NO_DEFAULT_PATH
#)

FIND_PATH(
   QT_STATIC_ROBOTINO_API2_QT_LIBRARY_DIR 
   NAMES
   libQtCore.a
   QtCore.lib
   PATHS
   ${QT_STATIC_PATH}/lib/${ARCH}
   NO_DEFAULT_PATH
)

FIND_PROGRAM(
  QT_STATIC_ROBOTINO_API2_QT_MOC_EXECUTABLE
  NAMES moc
  PATHS ${QT_STATIC_PATH}/bin/${ARCH}
  NO_DEFAULT_PATH
)

FIND_PROGRAM(
  QT_STATIC_ROBOTINO_API2_QT_RCC_EXECUTABLE
  NAMES rcc
  PATHS ${QT_STATIC_PATH}/bin/${ARCH}
  NO_DEFAULT_PATH
)

FIND_LIBRARY(QT_STATIC_ROBOTINO_API2_QT_QTMAIN_LIBRARY NAMES qtmain PATHS ${QT_STATIC_ROBOTINO_API2_QT_LIBRARY_DIR} NO_DEFAULT_PATH)
FIND_LIBRARY(QT_STATIC_ROBOTINO_API2_QT_QTCORE_LIBRARY NAMES QtCore PATHS ${QT_STATIC_ROBOTINO_API2_QT_LIBRARY_DIR} NO_DEFAULT_PATH)
FIND_LIBRARY(QT_STATIC_ROBOTINO_API2_QT_QTNETWORK_LIBRARY NAMES QtNetwork PATHS ${QT_STATIC_ROBOTINO_API2_QT_LIBRARY_DIR} NO_DEFAULT_PATH)
FIND_LIBRARY(QT_STATIC_ROBOTINO_API2_QT_QTXML_LIBRARY NAMES QtXml PATHS ${QT_STATIC_ROBOTINO_API2_QT_LIBRARY_DIR} NO_DEFAULT_PATH)
#FIND_LIBRARY(QT_STATIC_ROBOTINO_API2_QT_QTGUI_LIBRARY NAMES QtGui PATHS ${QT_STATIC_ROBOTINO_API2_QT_LIBRARY_DIR} NO_DEFAULT_PATH)
#FIND_LIBRARY(QT_STATIC_ROBOTINO_API2_QT_QTSVG_LIBRARY NAMES QtSvg PATHS ${QT_STATIC_ROBOTINO_API2_QT_LIBRARY_DIR} NO_DEFAULT_PATH)

SET( QT_STATIC_QTMAIN_LIBRARY "${QT_STATIC_ROBOTINO_API2_QT_QTMAIN_LIBRARY}" CACHE FILEPATH "" FORCE )
SET( QT_STATIC_QTCORE_LIBRARY "${QT_STATIC_ROBOTINO_API2_QT_QTCORE_LIBRARY}" CACHE FILEPATH "" FORCE )
SET( QT_STATIC_QTNETWORK_LIBRARY "${QT_STATIC_ROBOTINO_API2_QT_QTNETWORK_LIBRARY}" CACHE FILEPATH "" FORCE )
SET( QT_STATIC_QTXML_LIBRARY "${QT_STATIC_ROBOTINO_API2_QT_QTXML_LIBRARY}" CACHE FILEPATH "" FORCE )
#SET( QT_QTGUI_LIBRARY "${QT_STATIC_ROBOTINO_API2_QT_QTGUI_LIBRARY}" CACHE FILEPATH "" FORCE )
#SET( QT_QTSVG_LIBRARY "${QT_STATIC_ROBOTINO_API2_QT_QTSVG_LIBRARY}" CACHE FILEPATH "" FORCE )

SET( QT4_STATIC_BIN_PATH ${QT_STATIC_PATH}/bin/${ARCH} )
SET( QT4_STATIC_MOC_EXECUTABLE "${QT_STATIC_ROBOTINO_API2_QT_MOC_EXECUTABLE}" CACHE FILEPATH "" FORCE )

IF( WIN32 )
	FIND_LIBRARY(QT_STATIC_ROBOTINO_API2_QT_QTMAIND_LIBRARY NAMES qtmaind PATHS ${QT_STATIC_ROBOTINO_API2_QT_LIBRARY_DIR} NO_DEFAULT_PATH)
	FIND_LIBRARY(QT_STATIC_ROBOTINO_API2_QT_QTCORED_LIBRARY NAMES QtCored PATHS ${QT_STATIC_ROBOTINO_API2_QT_LIBRARY_DIR} NO_DEFAULT_PATH)
	FIND_LIBRARY(QT_STATIC_ROBOTINO_API2_QT_QTNETWORKD_LIBRARY NAMES QtNetworkd PATHS ${QT_STATIC_ROBOTINO_API2_QT_LIBRARY_DIR} NO_DEFAULT_PATH)
	FIND_LIBRARY(QT_STATIC_ROBOTINO_API2_QT_QTXMLD_LIBRARY NAMES QtXmld PATHS ${QT_STATIC_ROBOTINO_API2_QT_LIBRARY_DIR} NO_DEFAULT_PATH)
#	FIND_LIBRARY(QT_STATIC_ROBOTINO_API2_QT_QTGUID_LIBRARY NAMES QtGuid PATHS ${QT_STATIC_ROBOTINO_API2_QT_LIBRARY_DIR} NO_DEFAULT_PATH)
#	FIND_LIBRARY(QT_STATIC_ROBOTINO_API2_QT_QTSVGD_LIBRARY NAMES QtSvgd PATHS ${QT_STATIC_ROBOTINO_API2_QT_LIBRARY_DIR} NO_DEFAULT_PATH)
	
	SET( QT_STATIC_QTMAIN_LIBRARY optimized "${QT_STATIC_ROBOTINO_API2_QT_QTMAIN_LIBRARY}" debug "${QT_STATIC_ROBOTINO_API2_QT_QTMAIND_LIBRARY}" CACHE FILEPATH "" FORCE )
	SET( QT_STATIC_QTCORE_LIBRARY optimized "${QT_STATIC_ROBOTINO_API2_QT_QTCORE_LIBRARY}" debug "${QT_STATIC_ROBOTINO_API2_QT_QTCORED_LIBRARY}" CACHE FILEPATH "" FORCE )
	SET( QT_STATIC_QTNETWORK_LIBRARY optimized "${QT_STATIC_ROBOTINO_API2_QT_QTNETWORK_LIBRARY}" debug "${QT_STATIC_ROBOTINO_API2_QT_QTNETWORKD_LIBRARY}" CACHE FILEPATH "" FORCE )
	SET( QT_STATIC_QTXML_LIBRARY optimized "${QT_STATIC_ROBOTINO_API2_QT_QTXML_LIBRARY}" debug "${QT_STATIC_ROBOTINO_API2_QT_QTXMLD_LIBRARY}" CACHE FILEPATH "" FORCE )
#	SET( QT_QTGUI_LIBRARY optimized "${QT_STATIC_ROBOTINO_API2_QT_QTGUI_LIBRARY}" debug "${QT_STATIC_ROBOTINO_API2_QT_QTGUID_LIBRARY}" CACHE FILEPATH "" FORCE )
#	SET( QT_QTSVG_LIBRARY optimized "${QT_STATIC_ROBOTINO_API2_QT_QTSVG_LIBRARY}" debug "${QT_STATIC_ROBOTINO_API2_QT_QTSVGD_LIBRARY}" CACHE FILEPATH "" FORCE )
ENDIF()

SET(
   QT_STATIC_ROBOTINO_API2_QT_DEFINITIONS
   -DQT_NETWORK_LIB
   -DQT_CORE_LIB
#   -DQT_GUI_LIB
   -DQT_XML_LIB
   -DQT_NAMESPACE=robotino_api2_qt
   -DHAVE_STATIC_QT
   -DQT_NO_KEYWORDS
)

SET( QT_STATIC_DEFINITIONS	${QT_STATIC_ROBOTINO_API2_QT_DEFINITIONS} CACHE STRING "" FORCE )

IF( WIN32 )
	SET(
		QT_STATIC_HELP_LIBRARIES
		ws2_32
		imm32
		winmm
		CACHE STRING "" FORCE
	)
ENDIF( WIN32 )


SET( QT_STATIC_INCLUDE_DIR "${QT_STATIC_ROBOTINO_API2_QT_QT_INCLUDE_DIR}" CACHE FILEPATH "" FORCE )
SET( QT_STATIC_QTCORE_INCLUDE_DIR "${QT_STATIC_ROBOTINO_API2_QT_QTCORE_INCLUDE_DIR}" CACHE FILEPATH "" FORCE )
SET( QT_STATIC_QTXML_INCLUDE_DIR "${QT_STATIC_ROBOTINO_API2_QT_QTXML_INCLUDE_DIR}" CACHE FILEPATH "" FORCE )
SET( QT_STATIC_QTNETWORK_INCLUDE_DIR "${QT_STATIC_ROBOTINO_API2_QT_QTNETWORK_INCLUDE_DIR}" CACHE FILEPATH "" FORCE )
#SET( QT_QTGUI_INCLUDE_DIR "${QT_STATIC_ROBOTINO_API2_QT_QTGUI_INCLUDE_DIR}" CACHE FILEPATH "" FORCE )
#SET( QT_QTSVG_INCLUDE_DIR "${QT_STATIC_ROBOTINO_API2_QT_QTSVG_INCLUDE_DIR}" CACHE FILEPATH "" FORCE )

MACRO (QT_STATIC_ROBOTINO_API2_QT_EXTRACT_OPTIONS _qt4_files _qt4_options)
    SET(${_qt4_files})
    SET(${_qt4_options})
    SET(_QT_STATIC_ROBOTINO_API2_QT_DOING_OPTIONS FALSE)
    FOREACH(_currentArg ${ARGN})
      IF ("${_currentArg}" STREQUAL "OPTIONS")
        SET(_QT_STATIC_ROBOTINO_API2_QT_DOING_OPTIONS TRUE)
      ELSE ("${_currentArg}" STREQUAL "OPTIONS")
        IF(_QT_STATIC_ROBOTINO_API2_QT_DOING_OPTIONS) 
          LIST(APPEND ${_qt4_options} "${_currentArg}")
        ELSE(_QT_STATIC_ROBOTINO_API2_QT_DOING_OPTIONS)
          LIST(APPEND ${_qt4_files} "${_currentArg}")
        ENDIF(_QT_STATIC_ROBOTINO_API2_QT_DOING_OPTIONS)
      ENDIF ("${_currentArg}" STREQUAL "OPTIONS")
    ENDFOREACH(_currentArg) 
  ENDMACRO (QT_STATIC_ROBOTINO_API2_QT_EXTRACT_OPTIONS)
  
  MACRO (QT_STATIC_ROBOTINO_API2_QT_GET_MOC_FLAGS _moc_flags)
     SET(${_moc_flags})
     GET_DIRECTORY_PROPERTY(_inc_DIRS INCLUDE_DIRECTORIES)

     FOREACH(_current ${_inc_DIRS})
        SET(${_moc_flags} ${${_moc_flags}} "-I${_current}")
     ENDFOREACH(_current ${_inc_DIRS})
     
     GET_DIRECTORY_PROPERTY(_defines COMPILE_DEFINITIONS)
     FOREACH(_current ${_defines})
        SET(${_moc_flags} ${${_moc_flags}} "-D${_current}")
     ENDFOREACH(_current ${_defines})

     IF(Q_WS_WIN)
       SET(${_moc_flags} ${${_moc_flags}} -DWIN32)
     ENDIF(Q_WS_WIN)

  ENDMACRO(QT_STATIC_ROBOTINO_API2_QT_GET_MOC_FLAGS)
  
  MACRO (QT4_STATIC_GET_MOC_FLAGS _moc_flags)
  QT_STATIC_ROBOTINO_API2_QT_GET_MOC_FLAGS( _moc_flags )
  ENDMACRO (QT4_STATIC_GET_MOC_FLAGS)
  

 # QT4_ADD_RESOURCES(outfiles inputfile ... )

  MACRO (QT4_STATIC_ADD_RESOURCES outfiles )
    QT_STATIC_ROBOTINO_API2_QT_EXTRACT_OPTIONS(rcc_files rcc_options ${ARGN})

    FOREACH (it ${rcc_files})
      GET_FILENAME_COMPONENT(outfilename ${it} NAME_WE)
      GET_FILENAME_COMPONENT(infile ${it} ABSOLUTE)
      GET_FILENAME_COMPONENT(rc_path ${infile} PATH)
      SET(outfile ${CMAKE_CURRENT_BINARY_DIR}/qrc_${outfilename}.cxx)
      #  parse file for dependencies 
      #  all files are absolute paths or relative to the location of the qrc file
      FILE(READ "${infile}" _RC_FILE_CONTENTS)
      STRING(REGEX MATCHALL "<file[^<]+" _RC_FILES "${_RC_FILE_CONTENTS}")
      SET(_RC_DEPENDS)
      FOREACH(_RC_FILE ${_RC_FILES})
        STRING(REGEX REPLACE "^<file[^>]*>" "" _RC_FILE "${_RC_FILE}")
        STRING(REGEX MATCH "^/|([A-Za-z]:/)" _ABS_PATH_INDICATOR "${_RC_FILE}")
        IF(NOT _ABS_PATH_INDICATOR)
          SET(_RC_FILE "${rc_path}/${_RC_FILE}")
        ENDIF(NOT _ABS_PATH_INDICATOR)
        SET(_RC_DEPENDS ${_RC_DEPENDS} "${_RC_FILE}")
      ENDFOREACH(_RC_FILE)
      ADD_CUSTOM_COMMAND(OUTPUT ${outfile}
        COMMAND ${QT_STATIC_ROBOTINO_API2_QT_RCC_EXECUTABLE}
        ARGS ${rcc_options} -name ${outfilename} -o ${outfile} ${infile}
        MAIN_DEPENDENCY ${infile}
        DEPENDS ${_RC_DEPENDS})
      SET(${outfiles} ${${outfiles}} ${outfile})
    ENDFOREACH (it)

  ENDMACRO (QT4_STATIC_ADD_RESOURCES)