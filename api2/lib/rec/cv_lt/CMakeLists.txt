
SET(
	NAME
	rec_cv_lt
)

MESSAGE("NAME:${NAME}")

IF( WIN32 )
	SET( ARCH win32 )
ELSE( WIN32 )
	SET( ARCH linux )
ENDIF( WIN32 )

FILE( GLOB SRCS *.cpp )
FILE( GLOB MAIN_HEADER *.h )
FILE( GLOB PRIVATE_HEADER *.hpp )

SET( REC_CV_LT_DIR "${CMAKE_CURRENT_SOURCE_DIR}" )

IF( WIN32 OR APPLE )
  IF( NOT IOS )
    INCLUDE( jpeg/CMakeLists.txt )
  ENDIF()
ENDIF()

ADD_LIBRARY(
	${NAME}
	STATIC
	${SRCS}
	${REC_CV_LT_JPEG_SOURCE}
	${MAIN_HEADER}
	${PRIVATE_HEADER}
)

IF( WIN32 )
	SET_TARGET_PROPERTIES(
		${NAME}
		PROPERTIES
		COMPILE_FLAGS "/wd4251 /MP"
	)
	IF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
		SET_TARGET_PROPERTIES(
			${NAME}
			PROPERTIES
			STATIC_LIBRARY_FLAGS "/machine:x64"
		)
	ENDIF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
ELSE( WIN32 )
	IF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
		SET( CMAKE_C_FLAGS   "${CMAKE_C_FLAGS}   -fPIC" )
		SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC" )
	ENDIF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
	
	IF(NOT APPLE)
		TARGET_LINK_LIBRARIES(
			${NAME}
			${JPEG_LIB}
		)
	ENDIF()
	
ENDIF( WIN32 )

IF (APPLE)
	set_target_properties (${NAME} PROPERTIES XCODE_ATTRIBUTE_SYMROOT "${ROBOTINO_API2_BINARY_DIR}")
	set_target_properties (${NAME} PROPERTIES XCODE_ATTRIBUTE_CONFIGURATION_BUILD_DIR "\$(BUILD_DIR)/\$(CONFIGURATION)\$(EFFECTIVE_PLATFORM_NAME)")
ENDIF (APPLE)

SOURCE_GROUP( "Source Files" FILES ${SRCS} ${MAIN_HEADER} ${PRIVATE_HEADER} )
SOURCE_GROUP( "Jpeg Files" FILES ${JPEG_SRCS} )

IF( DO_COMMON_INSTALL )
	SET( REC_CV_LT_INCLUDE_INSTALL_DIR include/rec/cv_lt )

	INSTALL(
		TARGETS ${NAME}
		ARCHIVE DESTINATION lib
		LIBRARY DESTINATION lib
		RUNTIME DESTINATION bin
	)

	INSTALL(
		FILES
		${MAIN_HEADER}
		DESTINATION ${REC_CV_LT_INCLUDE_INSTALL_DIR}
	)
ENDIF( DO_COMMON_INSTALL )