SET(
	NAME
	rec_robotino_rpc
)

INCLUDE_DIRECTORIES(
	${CMAKE_CURRENT_BINARY_DIR}
)

FILE( GLOB SRCS *.cpp )
FILE( GLOB HEADER *.h )
FILE( GLOB MESSAGES_HEADER messages/*.h )

MY_WRAP_CPP(
	MOC_SRCS
	rec_robotino_rpc
	${HEADER}
)
	
IF( REC_ROBOTINO_RPC_STATIC )	
	SET( LIBTYPE STATIC )
ELSE( REC_ROBOTINO_RPC_STATIC )	
	SET( LIBTYPE SHARED )
ENDIF( REC_ROBOTINO_RPC_STATIC )
	
IF( WIN32 AND NOT REC_ROBOTINO_RPC_STATIC )
	SET( SRCS ${SRCS} "${CMAKE_CURRENT_BINARY_DIR}/${NAME}_version.rc" )
ENDIF( WIN32 AND NOT REC_ROBOTINO_RPC_STATIC )

ADD_LIBRARY(
	${NAME}
	${LIBTYPE}
	${SRCS}
	${HEADER}
	${MESSAGES_HEADER}
	${MOC_SRCS}
)

SOURCE_GROUP( Moc REGULAR_EXPRESSION "(moc_|qrc_)" )
SOURCE_GROUP( Sources FILES ${SRCS} ${HEADER} )
SOURCE_GROUP( Messages FILES ${MESSAGES_HEADER} )

IF(WIN32)
	SET_TARGET_PROPERTIES(
		${NAME}
		PROPERTIES
		COMPILE_FLAGS "/wd4251 /MP"
	)
	IF( REC_ROBOTINO_RPC_STATIC AND CMAKE_SIZEOF_VOID_P EQUAL 8 )
		SET_TARGET_PROPERTIES(
			${NAME}
			PROPERTIES
			STATIC_LIBRARY_FLAGS "/machine:x64"
		)
	ENDIF( REC_ROBOTINO_RPC_STATIC AND CMAKE_SIZEOF_VOID_P EQUAL 8 )
ELSE( WIN32 )
	IF( REC_ROBOTINO_RPC_STATIC AND CMAKE_SIZEOF_VOID_P EQUAL 8 )
		SET( CMAKE_C_FLAGS   "${CMAKE_C_FLAGS}   -fPIC" )
		SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC" )
	ENDIF( REC_ROBOTINO_RPC_STATIC AND CMAKE_SIZEOF_VOID_P EQUAL 8 )
ENDIF( WIN32 )

TARGET_LINK_LIBRARIES(
	${NAME}
	${REC_RPC_LIBRARY}
	${QT_QTCORE_LIBRARY}
	${QT_QTNETWORK_LIBRARY}
	${QT_QTXML_LIBRARY}
	${QT_HELP_LIBRARIES}
)

IF( NOT REC_ROBOTINO_RPC_STATIC )
	GENERATE_VERSION_RC( ${NAME} "${CMAKE_CURRENT_BINARY_DIR}/${NAME}_version.rc"  "${ROBOTINO_COMMON_VERSION}" "${NAME}" "${NAME}" "${NAME}.dll" 1 )
ENDIF( NOT REC_ROBOTINO_RPC_STATIC )

IF (APPLE)
	set_target_properties (${NAME} PROPERTIES XCODE_ATTRIBUTE_SYMROOT "${ROBOTINO_API2_BINARY_DIR}")
	set_target_properties (${NAME} PROPERTIES XCODE_ATTRIBUTE_CONFIGURATION_BUILD_DIR "\$(BUILD_DIR)/\$(CONFIGURATION)\$(EFFECTIVE_PLATFORM_NAME)")
ENDIF (APPLE)

IF( DO_COMMON_INSTALL )
	SET( REC_ROBOTINO_RPC_INCLUDE_INSTALL_DIR include/rec/robotino/rpc )

	INSTALL(
		TARGETS ${NAME}
		ARCHIVE DESTINATION lib
		LIBRARY DESTINATION lib
		RUNTIME DESTINATION bin
	)

	INSTALL(
		FILES
		${HEADER}
		DESTINATION ${REC_ROBOTINO_RPC_INCLUDE_INSTALL_DIR}
	)

	INSTALL(
		FILES
		${MESSAGES_HEADER}
		DESTINATION ${REC_ROBOTINO_RPC_INCLUDE_INSTALL_DIR}/messages
	)
ENDIF( DO_COMMON_INSTALL )
